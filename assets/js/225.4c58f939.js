(window.webpackJsonp=window.webpackJsonp||[]).push([[225],{412:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"核心模块-buffer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#核心模块-buffer","aria-hidden":"true"}},[t._v("#")]),t._v(" 核心模块 - buffer")]),t._v(" "),a("h2",{attrs:{id:"核心概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#核心概念","aria-hidden":"true"}},[t._v("#")]),t._v(" 核心概念")]),t._v(" "),a("p",[t._v("在引入"),a("code",[t._v("TypedArray")]),t._v("之前，"),a("code",[t._v("JavaScript")]),t._v("语言没有用于读取或操作二进制数据流的机制。官网上有一段关于"),a("code",[t._v("Buffer")]),t._v("的描述：")]),t._v(" "),a("ul",[a("li",[a("font",{attrs:{color:"#DD1144"}},[t._v("Buffer类是作为Node.js API 的一部分引入的，用于在 TCP 流、文件系统操作、以及其他上下文中与八位字节流进行交互")])],1)]),t._v(" "),a("p",[t._v("虽然比较晦涩难懂，但是有两点值得注意：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("Buffer")]),t._v("是类，或者是一种特殊的数据结构，和常见的核心模块"),a("code",[t._v("fs")]),t._v("、"),a("code",[t._v("http")]),t._v("等等这种对象还一样")]),t._v(" "),a("li",[a("code",[t._v("Node.js")]),t._v("可以用来处理二进制流数据或者与之进行交互,可见"),a("code",[t._v("Buffer")]),t._v("和二进制有很密切的关系。")])]),t._v(" "),a("p",[a("font",{attrs:{color:"#CC99CD"}},[t._v("Buffer用于读取或操作二进制数据流，做为Node.js API的一部分使用时无需require，用于操作网络协议、数据库、图片和文件 I/O 等一些需要大量二进制数据的场景。Buffer在创建时大小已经被确定且是无法调整的，在内存分配这块 Buffer 是由 C++ 层面提供而不是 V8 具体后面会讲解")])],1),t._v(" "),a("p",[t._v("在这里不知道你是否认为这是很简单的？但是上面提到的一些关键词二进制、流（Stream）、缓冲区（Buffer），这些又都是什么呢？下面尝试做一些简单的介绍。")]),t._v(" "),a("h3",{attrs:{id:"_1-二进制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-二进制","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 二进制")]),t._v(" "),a("p",[t._v("二进制数据使用"),a("code",[t._v("0")]),t._v("和"),a("code",[t._v("1")]),t._v("两个数码来表示的数据，为了存储或展示一些数据，计算机需要先将这些数据转换为二进制来表示。例如，我想存储"),a("code",[t._v("66")]),t._v("这个数字，计算机会先将数字"),a("code",[t._v("66")]),t._v("转化为二进制01000010表示")]),t._v(" "),a("p",[t._v("上面用数字举了一个示例，我们知道数字只是数据类型之一，其它的还有字符串、图像、文件等。例如我们对一个英文字母"),a("code",[t._v("L")]),t._v("操作，在"),a("code",[t._v("JavaScript")]),t._v("里通过"),a("code",[t._v("'L'.charCodeAt()")]),t._v("取到对应的ASCII码之后（通过以上的步骤）会转为二进制表示，"),a("font",{attrs:{color:"#DD1144"}},[t._v("所以对于这种字母L，计算机会先将其转化成为数字76，再将数字转化成为二进制数据")])],1),t._v(" "),a("p",[t._v("可是问题又来了，计算机将字母转化成为数字的规则是什么？")]),t._v(" "),a("h3",{attrs:{id:"_2-字符集"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-字符集","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. 字符集")]),t._v(" "),a("p",[a("font",{attrs:{color:"#DD1144"}},[t._v("字符集已经定义好的表示每个字符的确切数字的规则")]),t._v("。")],1),t._v(" "),a("p",[t._v("我们对这些规则有不同的定义，最流行的包括"),a("code",[t._v("Unicode")]),t._v("和"),a("code",[t._v("ASCII")]),t._v("。"),a("code",[t._v("JavaScript")]),t._v("可以很好地处理"),a("code",[t._v("Unicode")]),t._v("字符集。所以，浏览器中的"),a("code",[t._v("Unicode")]),t._v("规定76应该表示L。")]),t._v(" "),a("h3",{attrs:{id:"_3-字符编码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-字符编码","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. 字符编码")]),t._v(" "),a("p",[t._v("正如有一些字符集规则定义数字应该怎么样表示字符一样，也有一些规则定义了数字应该如何在二进制文件中表示。")]),t._v(" "),a("p",[a("font",{attrs:{color:"#DD1144"}},[t._v("具体来说，就是用多少位来表示数字。这叫做字符编码")]),t._v("。")],1),t._v(" "),a("p",[t._v("字符编码的一个规则是"),a("code",[t._v("UTF-8")]),t._v("。UTF-8声明字符应该以"),a("code",[t._v("bytes")]),t._v("编码。一个byte是8位（bit）的集合 —— 8个1和0。因此，"),a("font",{attrs:{color:"#DD1144"}},[t._v("UTF-8规定应该使用8个1和0来表示二进制中任何字符")]),t._v("。")],1),t._v(" "),a("p",[t._v("之前的例子提到，数字12用二进制表示为 1100，但是用"),a("code",[t._v("UTF-8")]),t._v("表示应该是8位才对。所以"),a("code",[t._v("UTF-8")]),t._v("规定，计算机需要在不满8位的二进制数字左边添加更多的位，以使其成为一个字节。所以12应该存储为00001100。\n因此 76 在UTF-8规则下存储表示为：01001100")]),t._v(" "),a("p",[t._v("这就是计算机在二进制文件中存储字符串或字符的方式。同样，计算机也规定了图片和视频应该如何转换、编码和存储在二进制文件中的规则。计算机将所有数据类型存储在二进制文件中。")]),t._v(" "),a("p",[t._v("通过使用字符编码，可实现"),a("code",[t._v("Buffer")]),t._v("实例与"),a("code",[t._v("JavaScript")]),t._v("字符串之间的相互转换，目前所支持的字符编码如下所示：")]),t._v(" "),a("ul",[a("li",[a("font",{attrs:{color:"#3eaf7c"}},[t._v("ascii")]),t._v(" - 仅适用于 7 位 "),a("code",[t._v("ASCII")]),t._v("数据。此编码速度很快，如果设置则会剥离高位。")],1),t._v(" "),a("li",[a("font",{attrs:{color:"#3eaf7c"}},[t._v("utf8")]),t._v(" - 多字节编码的"),a("code",[t._v("Unicode")]),t._v("字符。许多网页和其他文档格式都使用 "),a("code",[t._v("UTF-8")]),t._v("。")],1),t._v(" "),a("li",[a("font",{attrs:{color:"#3eaf7c"}},[t._v("utf16le")]),t._v(" - 2 或 4 个字节，小端序编码的 Unicode 字符。支持代理对（U+10000 至 U+10FFFF）。")],1),t._v(" "),a("li",[a("font",{attrs:{color:"#3eaf7c"}},[t._v("ucs2")]),t._v(" - "),a("code",[t._v("utf16le")]),t._v(" 的别名。")],1),t._v(" "),a("li",[a("font",{attrs:{color:"#3eaf7c"}},[t._v("base64")]),t._v(" - "),a("code",[t._v("Base64")]),t._v("编码。当从字符串创建"),a("code",[t._v("Buffer")]),t._v("时，此编码也会正确地接受 RFC 4648 第 5 节中指定的 “URL 和文件名安全字母”。")],1),t._v(" "),a("li",[a("font",{attrs:{color:"#3eaf7c"}},[t._v("latin1")]),t._v("  - 一种将"),a("code",[t._v("Buffer")]),t._v("编码成单字节编码字符串的方法（由 RFC 1345 中的 IANA 定义，第 63 页，作为"),a("code",[t._v("Latin-1")]),t._v("的补充块和 C0/C1 控制码）。")],1),t._v(" "),a("li",[a("font",{attrs:{color:"#3eaf7c"}},[t._v("binary")]),t._v(" - "),a("code",[t._v("latin1")]),t._v(" 的别名。")],1),t._v(" "),a("li",[a("font",{attrs:{color:"#3eaf7c"}},[t._v("hex")]),t._v(" - 将每个字节编码成两个十六进制的字符。")],1)]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" buf "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello world'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ascii'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hex'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 68656c6c6f20776f726c64")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" buf "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'LLLLLLLL'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hex'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4c4c4c4c4c4c4c4c")]),t._v("\n")])])]),a("p",[t._v("现在我们了解了什么是二进制数据，接下来我们介绍一下什么是二进制数据流。")]),t._v(" "),a("h3",{attrs:{id:"_3-stream"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-stream","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. Stream")]),t._v(" "),a("p",[t._v("流，英文"),a("code",[t._v("Stream")]),t._v("是对输入输出设备的抽象，这里的设备可以是文件、网络、内存等, "),a("font",{attrs:{color:"#DD1144"}},[t._v("而JavaScript中的Stream只是表示随着时间的推移从一个点移动到另一个点的数据序列")]),t._v("。")],1),t._v(" "),a("p",[t._v("流是有方向性的，当程序从某个数据源读入数据，会开启一个输入流，这里的数据源可以是文件或者网络等，例如我们从"),a("code",[t._v("a.txt")]),t._v("文件读入数据。相反的当我们的程序需要写出数据到指定数据源（文件、网络等）时，则开启一个输出流。当有一些大文件操作时，我们就需要"),a("code",[t._v("Stream")]),t._v("像管道一样，一点一点的将数据流出。")]),t._v(" "),a("p",[t._v("我们现在有一大罐水需要浇一片菜地，如果我们将水罐的水一下全部倒入菜地，首先得需要有多么大的力气（这里的力气好比计算机中的硬件性能）才可搬得动。如果，我们拿来了水管将水一点一点流入我们的菜地，这个时候不要这么大力气就可完成。")]),t._v(" "),a("p",[t._v("关于"),a("code",[t._v("Stream")]),t._v("其实是一个更大的核心模块，但是它的基础却是"),a("code",[t._v("Buffer")]),t._v("，所以两者无法相互脱离，我们这里只是先简单介绍一下"),a("code",[t._v("Stream")]),t._v("的概念，后面一节我们会在理解"),a("code",[t._v("Buffer")]),t._v("的基础上详细讲解"),a("code",[t._v("Stream")])]),t._v(" "),a("h3",{attrs:{id:"_4-buffer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-buffer","aria-hidden":"true"}},[t._v("#")]),t._v(" 4. Buffer")]),t._v(" "),a("p",[t._v("通过以上"),a("code",[t._v("Stream")]),t._v("的讲解，我们已经看到数据是从一端流向另一端，那么他们是如何流动的呢？")]),t._v(" "),a("p",[t._v("通常，数据的移动是为了处理或者读取它，并根据它进行决策。伴随着时间的推移，每一个过程都会有一个最小或最大数据量。"),a("font",{attrs:{color:"#CC99CD"}},[t._v("如果数据到达的速度比进程消耗的速度快，那么少数早到达的数据会处于等待区等候被处理。反之，如果数据到达的速度比进程消耗的数据慢，那么早先到达的数据需要等待一定量的数据到达之后才能被处理。")])],1),t._v(" "),a("p",[t._v("这里的等待区就指的缓冲区（Buffer），它是计算机中的一个小物理单位，通常位于计算机的"),a("code",[t._v("RAM")]),t._v("中。")]),t._v(" "),a("p",[t._v("无论什么情况，总有一个等待的地方。这就是"),a("code",[t._v("Node.js")]),t._v("的"),a("code",[t._v("Buffer")]),t._v("! "),a("code",[t._v("js")]),t._v("不能控制数据到达的速度或时间，也不能控制流的速度。它只能决定何时发送数据。如果还没有到时间，"),a("code",[t._v("Node.js")]),t._v("将把它们放在"),a("code",[t._v("buffer")]),t._v("中，即"),a("code",[t._v("RAM")]),t._v("中的一个小位置，直到将它们发送出去进行处理为止。")]),t._v(" "),a("p",[a("font",{attrs:{color:"#1E90FF"}},[a("strong",[t._v("① 公交车案例")])])],1),t._v(" "),a("p",[t._v("举一个公共汽车站乘车的例子，通常公共汽车会每隔几十分钟一趟，在这个时间到达之前就算乘客已经满了，车辆也不会提前发车，早到的乘客就需要先在车站进行等待。假设到达的乘客过多，后到的一部分则需要在公共汽车站等待下一趟车驶来。")]),t._v(" "),a("p",[t._v("在上面例子中的等待区公共汽车站，对应到我们的"),a("code",[t._v("Node.js")]),t._v("中也就是缓冲区（Buffer），另外乘客到达的速度是我们不能控制的，我们能控制的也只有何时发车，对应到我们的程序中就是我们无法控制数据流到达的时间，可以做的是能决定何时发送数据。")]),t._v(" "),a("p",[a("font",{attrs:{color:"#1E90FF"}},[a("strong",[t._v("② 观看电影缓冲案例")])])],1),t._v(" "),a("p",[t._v("我们在观看电影的时候，有一种情况是在线观看，如果你的网速很快，说明缓存的速度比播放的速度快，比如一秒能缓存5秒的视频量，那么基本上不存在卡顿的现象，因为你观看一秒，后面4秒的视频量已经在你观看的这一秒内同时传送过来了。如果5秒加载1秒的视频量，从一开始你就要等5秒，一次卡顿就是卡5秒，观影体验是极差的。")]),t._v(" "),a("p",[t._v("通过上面的概念介绍，我们来举一个字母"),a("code",[t._v("L")]),t._v("从输入到存储到计算机的表现形式和最终用"),a("code",[t._v("Buffer")]),t._v("表现的图示，来清楚的表达这样一个概念："),a("font",{attrs:{color:"#1E90FF"}},[t._v("Buffer是一个类似于数组，默认以十六进制来保存资源在计算机当中的二进制形式")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/node_buffer_knowledge.png"),alt:"Buffer和其他概念的关系"}})],1),t._v(" "),a("p",[t._v("通过上图我们也能清晰的看到数据在整个过程中的表现形式，图中在字符集和字符编码上分别使用的是"),a("code",[t._v("Unicode")]),t._v("和"),a("code",[t._v("utf8")]),t._v("，当然如果你问我为什么"),a("code",[t._v("Buffer")]),t._v("使用的是十六进制，我只能给你抛出两个结构：")]),t._v(" "),a("ul",[a("li",[t._v("Buffer< 4c 4c 4c 4c 4c 4c 4c 4c >")]),t._v(" "),a("li",[t._v("Buffer< 1001100 1001100 1001100 1001100 1001100 1001100 1001100 1001100 >"),a("br"),t._v("\n肉眼可见的肯定是十六进制表达简单又容易理解，第二种二进制看的头都大了")])]),t._v(" "),a("h2",{attrs:{id:"buffer的基本使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#buffer的基本使用","aria-hidden":"true"}},[t._v("#")]),t._v(" Buffer的基本使用")]),t._v(" "),a("h3",{attrs:{id:"_1-创建buffer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-创建buffer","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 创建Buffer")]),t._v(" "),a("p",[t._v("在引入"),a("code",[t._v("TypedArray")]),t._v("之前，"),a("code",[t._v("JavaScript")]),t._v("语言没有用于读取或操作二进制数据流的机制。 "),a("code",[t._v("Buffer")]),t._v("类是作为"),a("code",[t._v("Node.js API")]),t._v("的一部分引入的，用于在"),a("code",[t._v("TCP")]),t._v("流、文件系统操作、以及其他上下文中与八位字节流进行交互。")]),t._v(" "),a("p",[t._v("现在可以使用"),a("code",[t._v("TypedArray")]),t._v("， "),a("code",[t._v("Buffer")]),t._v("类以更优化和更适合"),a("code",[t._v("Node.js")]),t._v("的方式实现了"),a("code",[t._v("Uint8Array API")]),t._v("。")]),t._v(" "),a("p",[a("code",[t._v("Buffer")]),t._v("类的实例类似于从 0 到 255 之间的整数数组（其他整数会通过 ＆ 255 操作强制转换到此范围），但对应于 V8 堆外部的固定大小的原始内存分配。 "),a("code",[t._v("Buffer")]),t._v("的大小在创建时确定，且无法更改。")]),t._v(" "),a("p",[a("code",[t._v("Buffer")]),t._v("类在全局作用域中，因此无需使用"),a("code",[t._v("require('buffer').Buffer")]),t._v("。我们下面来看几个创建的例子")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建一个长度为 10、且用零填充的 Buffer。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" buf1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alloc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <Buffer 00 00 00 00 00 00 00 00 00 00>")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建一个长度为 10、且用 0x1 填充的 Buffer。 ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" buf2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alloc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <Buffer 01 01 01 01 01 01 01 01 01 01>")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建一个长度为 10、且未初始化的 Buffer。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这个方法比调用 Buffer.alloc() 更快，")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 但返回的 Buffer 实例可能包含旧数据，")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 因此需要使用 fill() 或 write() 重写。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" buf3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("allocUnsafe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建一个包含 [0x1, 0x2, 0x3] 的 Buffer。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" buf4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <Buffer 01 02 03>")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建一个包含 UTF-8 字节 [0x74, 0xc3, 0xa9, 0x73, 0x74] 的 Buffer。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" buf5 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tést'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <Buffer 74 c3 a9 73 74>")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建一个包含 Latin-1 字节 [0x74, 0xe9, 0x73, 0x74] 的 Buffer。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" buf6 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'tést'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'latin1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <Buffer 74 e9 73 74>")]),t._v("\n\n")])])]),a("h3",{attrs:{id:"_2-buffer常用属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-buffer常用属性","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. Buffer常用属性")]),t._v(" "),a("p",[a("font",{attrs:{color:"#1E90FF"}},[a("strong",[t._v("① Buffer.byteLength")])])],1),t._v(" "),a("p",[t._v("这个表示整个"),a("code",[t._v("buffer")]),t._v("实际所占的字节数，因为不同的语言可能有不同的问题，比如"),a("font",{attrs:{color:"#3eaf7c"}},[t._v("英文字母在表达的时候一个字母就是一个字节，而中文稍微复杂，使用一个字节可能无法表达一个汉字，所以就用三个字节来表达汉字")]),t._v("：")],1),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("byteLength")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("byteLength")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'测试'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 6")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'测试'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 6")]),t._v("\n\n")])])]),a("p",[a("font",{attrs:{color:"#1E90FF"}},[a("strong",[t._v("② Buffer.isBuffer")])])],1),t._v(" "),a("p",[t._v("测试一个对象是不是"),a("code",[t._v("Buffer")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isBuffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isBuffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isBuffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),a("p",[a("font",{attrs:{color:"#1E90FF"}},[a("strong",[t._v("③ Buffer.concat")])])],1),t._v(" "),a("p",[t._v("拼接"),a("code",[t._v("Buffer")]),t._v("，注意的是里面不是传入多个"),a("code",[t._v("Buffer")]),t._v("对象，而是一个"),a("code",[t._v("Buffer")]),t._v("的数组")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" buf1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'This '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" buf2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'is '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" buf3 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'buffer '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" buf4 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" buf5 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'demo '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" bufConcat "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("concat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("buf1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("buf2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("buf3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("buf4"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("buf5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bufConcat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// This is buffer test demo")]),t._v("\n")])])]),a("p",[a("font",{attrs:{color:"#1E90FF"}},[a("strong",[t._v("④ 实例属性")])])],1),t._v(" "),a("ul",[a("li",[a("font",{attrs:{color:"#3eaf7c"}},[t._v("buf.length")]),t._v(":返回内存中分配给"),a("code",[t._v("buf")]),t._v("的字节数。 不一定反映"),a("code",[t._v("buf")]),t._v("中可用数据的字节量。")],1),t._v(" "),a("li",[a("font",{attrs:{color:"#3eaf7c"}},[t._v("buf.toString")]),t._v(":根据"),a("code",[t._v("encoding")]),t._v("指定的字符编码将"),a("code",[t._v("buf")]),t._v("解码成字符串")],1),t._v(" "),a("li",[a("font",{attrs:{color:"#3eaf7c"}},[t._v("buf.fill")]),t._v(":用指定的"),a("code",[t._v("value")]),t._v("填充"),a("code",[t._v("buf")]),t._v("。 如果没有指定"),a("code",[t._v("offset")]),t._v("与 "),a("code",[t._v("end")]),t._v("，则填充整个"),a("code",[t._v("buf")])],1),t._v(" "),a("li",[a("font",{attrs:{color:"#3eaf7c"}},[t._v("buf.equals")]),t._v(":如果"),a("code",[t._v("buf")]),t._v("与参数具有完全相同的字节，则返回"),a("code",[t._v("true")]),t._v("，否则返回"),a("code",[t._v("false")])],1),t._v(" "),a("li",[a("font",{attrs:{color:"#3eaf7c"}},[t._v("buf.indexOf")]),t._v(":是否包含参数，包含则返回所在下标，不包含返回-1")],1)]),t._v(" "),a("h3",{attrs:{id:"_3-乱码的处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-乱码的处理","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. 乱码的处理")]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("Buffer")]),t._v("和字符串之间相互转化的时候经常会出现这个乱码，我们来看一下：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" buf1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我正在学习'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buf1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <Buffer e6 88 91 e6 ad a3 e5 9c a8 e5 ad a6 e4 b9 a0>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" buf1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" buf2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("allocUnsafe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  buf1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("copy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buf2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buf2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buf2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <Buffer e6 88 91 e6 ad a3 e5 9c a8 e5 ad a6 e4 b9 a0>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <Buffer e6 88 91 e6 ad>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 我�")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//<Buffer a3 e5 9c a8 e5>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// �在�")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <Buffer ad a6 e4 b9 a0>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ��习")]),t._v("\n")])])]),a("p",[t._v("乱码的出现因为是汉字是三个字节的，现在11个字节不是三个倍数，没有办法正确按照每3个字节解析汉字，我们的解决方法是："),a("font",{attrs:{color:"#CC99CD"}},[t._v("使用内置的string_decoder（字符串解码器）来解析Buffer")])],1),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" StringDecoder "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'string_decoder'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" decoder "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("StringDecoder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'utf8'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" buf1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("from")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我正在学习'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buf1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <Buffer e6 88 91 e6 ad a3 e5 9c a8 e5 ad a6 e4 b9 a0>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" buf1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" buf2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("allocUnsafe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  buf1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("copy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buf2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("decoder"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buf2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <Buffer e6 88 91 e6 ad a3 e5 9c a8 e5 ad a6 e4 b9 a0>")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//我")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//正在")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//学习")]),t._v("\n\n")])])]),a("p",[t._v("简单的说一下"),a("code",[t._v("string_decoder")]),t._v("的官网介绍：")]),t._v(" "),a("ul",[a("li",[a("font",{attrs:{color:"#CC99CD"}},[t._v("本质")]),t._v("："),a("code",[t._v("string_decoder")]),t._v("模块提供了一个"),a("code",[t._v("API")]),t._v("，用于以保留编码的多字节 "),a("code",[t._v("UTF-8")]),t._v("和"),a("code",[t._v("UTF-16")]),t._v("字符的方式将"),a("code",[t._v("Buffer")]),t._v("对象解码为字符串")],1),t._v(" "),a("li",[a("font",{attrs:{color:"#CC99CD"}},[t._v("原理")]),t._v("：将"),a("code",[t._v("Buffer")]),t._v("实例写入"),a("code",[t._v("StringDecoder")]),t._v("实例时，将使用内部缓冲区来确保已解码的字符串不包含任何不完整的多字节字符。 它们保存在缓冲区中，直到下一次调用 "),a("code",[t._v("stringDecoder.write()")]),t._v("或调用"),a("code",[t._v("stringDecoder.end()")]),t._v("为止")],1)]),t._v(" "),a("h2",{attrs:{id:"buffer的内存机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#buffer的内存机制","aria-hidden":"true"}},[t._v("#")]),t._v(" Buffer的内存机制")]),t._v(" "),a("p",[t._v("在"),a("a",{attrs:{href:"https://www.nodejs.red/#/nodejs/memory",target:"_blank",rel:"noopener noreferrer"}},[t._v("Nodejs 中的 内存管理和 V8 垃圾回收机制"),a("OutboundLink")],1),t._v(" 一节主要讲解了在"),a("code",[t._v("Node.js")]),t._v("的垃圾回收中主要使用"),a("code",[t._v("V8")]),t._v("来管理，但是并没有提到"),a("code",[t._v("Buffer")]),t._v("类型的数据是如何回收的，下面让我们来了解"),a("code",[t._v("Buffer")]),t._v("的内存回收机制。")]),t._v(" "),a("p",[t._v("由于"),a("code",[t._v("Buffer")]),t._v("需要处理的是大量的二进制数据，假如用一点就向系统去申请，则会造成频繁的向系统申请内存调用，"),a("font",{attrs:{color:"#DD1144"}},[t._v("所以 Buffer 所占用的内存不再由V8分配，而是在 Node.js的C++层面完成申请，在JavaScript中进行内存分配。因此，这部分内存我们称之为堆外内存")]),t._v(" 。")],1),t._v(" "),a("h3",{attrs:{id:"_1-内存分配原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-内存分配原理","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 内存分配原理")]),t._v(" "),a("p",[a("font",{attrs:{color:"#DD1144"}},[t._v("Node.js 采用了 slab 机制进行预先申请、事后分配，是一种动态的管理机制")]),t._v("。")],1),t._v(" "),a("p",[t._v("使用"),a("code",[t._v("Buffer.alloc(size)")]),t._v("传入一个指定的"),a("code",[t._v("size")]),t._v("就会申请一块固定大小的内存区域，"),a("code",[t._v("slab")]),t._v("具有如下三种状态：")]),t._v(" "),a("ul",[a("li",[a("font",{attrs:{color:"#3eaf7c"}},[t._v("full")]),t._v(" ：完全分配状态")],1),t._v(" "),a("li",[a("font",{attrs:{color:"#3eaf7c"}},[t._v("partial")]),t._v(" ：部分分配状态")],1),t._v(" "),a("li",[a("font",{attrs:{color:"#3eaf7c"}},[t._v("empty")]),t._v(" ：没有被分配状态")],1)]),t._v(" "),a("p",[a("font",{attrs:{color:"#DD1144"}},[t._v("Node.js 以 8KB 为界限来区分是小对象还是大对象")]),t._v("，在 buffer.js 中可以看到以下代码")],1),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("poolSize "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 102 行，Node.js 版本为 v10.x")]),t._v("\n")])])]),a("p",[t._v("在"),a("code",[t._v("Buffer")]),t._v("初识一节里有提到过"),a("code",[t._v("Buffer")]),t._v("在创建时大小已经被确定且是无法调整的 到这里应该就明白了。")]),t._v(" "),a("h3",{attrs:{id:"_2-对象分配"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-对象分配","aria-hidden":"true"}},[t._v("#")]),t._v(" 2.对象分配")]),t._v(" "),a("p",[t._v("以下代码示例，在加载时直接调用了"),a("code",[t._v("createPool()")]),t._v("相当于直接初始化了一个 8 KB 的内存空间，这样在第一次进行内存分配时也会变得更高效。另外在初始化的同时还初始化了一个新的变量"),a("code",[t._v("poolOffset = 0")]),t._v("这个变量会记录已经使用了多少字节。")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("poolSize "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" poolSize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" poolOffset"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" allocPool"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 中间代码省略")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createPool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  poolSize "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("poolSize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  allocPool "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createUnsafeArrayBuffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("poolSize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  poolOffset "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createPool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 129 行")]),t._v("\n")])])]),a("p",[t._v("此时，新构造的"),a("code",[t._v("slab")]),t._v("如下所示：\n"),a("img",{attrs:{src:t.$withBase("/node_buffer_neicun_one.png"),alt:"buffer内存"}})]),t._v(" "),a("p",[t._v("如果是分配一个2048的"),a("code",[t._v("Buffer")]),t._v("对象：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alloc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2048")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("那么当前的"),a("code",[t._v("slab")]),t._v("内存是这样：\n"),a("img",{attrs:{src:t.$withBase("/node_buffer_neicun_two.png"),alt:"buffer内存"}})]),t._v(" "),a("p",[t._v("那么这个分配过程是怎样的呢？让我们再看"),a("code",[t._v("buffer.js")]),t._v("另外一个核心的方法"),a("code",[t._v("allocate(size)")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// https://github.com/nodejs/node/blob/v10.x/lib/buffer.js#L318")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("allocate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("size "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FastBuffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当分配的空间小于 Buffer.poolSize 向右移位，这里得出来的结果为 4KB")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("size "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("poolSize "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("size "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("poolSize "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" poolOffset"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createPool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FastBuffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("allocPool"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" poolOffset"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    poolOffset "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 已使用空间累加")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alignPool")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 8 字节内存对齐处理")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// C++ 层面申请")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createUnsafeBuffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("size"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"内存分配总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内存分配总结","aria-hidden":"true"}},[t._v("#")]),t._v(" 内存分配总结")]),t._v(" "),a("ul",[a("li",[t._v("在初次加载时就会初始化 1 个 8KB 的内存空间，"),a("code",[t._v("buffer.js")]),t._v("源码有体现")]),t._v(" "),a("li",[t._v("根据申请的内存大小分为 小 Buffer 对象 和 大 Buffer 对象")]),t._v(" "),a("li",[t._v("小"),a("code",[t._v("Buffer")]),t._v("情况，会继续判断这个"),a("code",[t._v("slab")]),t._v("空间是否足够\n"),a("ul",[a("li",[t._v("如果空间足够就去使用剩余空间同时更新"),a("code",[t._v("slab")]),t._v("分配状态，偏移量会增加")]),t._v(" "),a("li",[t._v("如果空间不足，"),a("code",[t._v("slab")]),t._v("空间不足，就会去创建一个新的"),a("code",[t._v("slab")]),t._v("空间用来分配")])])]),t._v(" "),a("li",[t._v("大"),a("code",[t._v("Buffer")]),t._v("情况，则会直接走"),a("code",[t._v("createUnsafeBuffer(size)")]),t._v("函数")]),t._v(" "),a("li",[t._v("不论是小"),a("code",[t._v("Buffer")]),t._v(" 对象还是大"),a("code",[t._v("Buffer")]),t._v("对象，内存分配是在"),a("code",[t._v("C++")]),t._v("层面完成，内存管理在"),a("code",[t._v("JavaScript")]),t._v("层面，最终还是可以被"),a("code",[t._v("V8")]),t._v("的垃圾回收标记所回收。")])]),t._v(" "),a("h2",{attrs:{id:"buffer的应用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#buffer的应用场景","aria-hidden":"true"}},[t._v("#")]),t._v(" Buffer的应用场景")]),t._v(" "),a("h3",{attrs:{id:"_1-i-o-操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-i-o-操作","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. I/O 操作")]),t._v(" "),a("p",[t._v("关于"),a("code",[t._v("I/O")]),t._v("可以是文件或网络"),a("code",[t._v("I/O")]),t._v("，以下为通过流的方式将"),a("code",[t._v("input.txt")]),t._v("的信息读取出来之后写入到"),a("code",[t._v("output.txt")]),t._v("文件，关于"),a("code",[t._v("Stream")]),t._v("与"),a("code",[t._v("Buffer")]),t._v("的关系不明白的在回头看看")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fs "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fs'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" inputStream "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createReadStream")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'input.txt'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建可读流")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" outputStream "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" fs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createWriteStream")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'output.txt'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建可写流")]),t._v("\n\ninputStream"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("pipe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("outputStream"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 管道读写")]),t._v("\n")])])]),a("p",[a("font",{attrs:{color:"#DD1144"}},[t._v("在 Stream 中我们是不需要手动去创建自己的缓冲区，在 Node.js 的流中将会自动创建。")])],1),t._v(" "),a("h3",{attrs:{id:"_2-zlib-js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-zlib-js","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. zlib.js")]),t._v(" "),a("p",[a("code",[t._v("zlib.js")]),t._v("为"),a("code",[t._v("Node.js")]),t._v("的核心库之一，其利用了缓冲区（Buffer）的功能来操作二进制数据流，提供了压缩或解压功能。关于"),a("code",[t._v("zlib")]),t._v("核心模块我们后面也会深入了解")]),t._v(" "),a("h3",{attrs:{id:"_3-加解密"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-加解密","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. 加解密")]),t._v(" "),a("p",[t._v("在一些加解密算法中会遇到使用"),a("code",[t._v("Buffer")]),t._v("，例如 "),a("code",[t._v("crypto.createCipheriv")]),t._v(" 的第二个参数"),a("code",[t._v("key")]),t._v("为"),a("code",[t._v("String")]),t._v("或"),a("code",[t._v("Buffer")]),t._v("类型，如果是"),a("code",[t._v("Buffer")]),t._v("类型，就用到了本篇我们讲解的内容，以下做了一个简单的加密示例，重点使用了"),a("code",[t._v("Buffer.alloc()")]),t._v("初始化一个实例（这个上面有介绍），之后使用了"),a("code",[t._v("fill")]),t._v("方法做了填充，这里重点在看下这个方法的使用。\n"),a("strong",[t._v("buf.fill(value[, offset[, end]][, encoding])")])]),t._v(" "),a("ul",[a("li",[t._v("value: 第一个参数为要填充的内容")]),t._v(" "),a("li",[t._v("offset: 偏移量，填充的起始位置")]),t._v(" "),a("li",[t._v("end: 结束填充 buf 的偏移量")]),t._v(" "),a("li",[t._v("encoding: 编码集")])]),t._v(" "),a("p",[t._v("以下为"),a("code",[t._v("Cipher")]),t._v("的对称加密"),a("code",[t._v("Demo")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" crypto "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'crypto'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" iv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" algorithm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" encoding"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cipherEncoding"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a123456789'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'aes-128-ecb'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'utf8'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'base64'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("handleKey")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("key")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" bytes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alloc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 初始化一个 Buffer 实例，每一项都用 00 填充")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bytes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <Buffer 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00>")]),t._v("\n    bytes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fill")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 填充")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("bytes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <Buffer 61 31 32 33 34 35 36 37 38 39 00 00 00 00 00 00>")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" bytes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" cipher "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" crypto"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createCipheriv")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("algorithm"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleKey")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" iv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" crypted "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cipher"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("update")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Node.js 技术栈'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" encoding"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cipherEncoding"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    crypted "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" cipher"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("final")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cipherEncoding"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("crypted"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// jE0ODwuKN6iaKFKqd3RF4xFZkOpasy8WfIDl8tRC5t0=")]),t._v("\n")])])]),a("h2",{attrs:{id:"buffer拓展"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#buffer拓展","aria-hidden":"true"}},[t._v("#")]),t._v(" Buffer拓展")]),t._v(" "),a("h3",{attrs:{id:"_1-buffer和cache的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-buffer和cache的区别","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. Buffer和Cache的区别")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("缓冲（Buffer）是用于处理二进制流数据，将数据缓冲起来，它是"),a("font",{attrs:{color:"#DD1144"}},[t._v("临时性")]),t._v("的，对于流式数据，会采用缓冲区将数据临时存储起来，等缓冲到一定的大小之后在存入硬盘中。视频播放器就是一个经典的例子，有时你会看到一个缓冲的图标，这意味着此时这一组缓冲区并未填满，当数据到达填满缓冲区并且被处理之后，此时缓冲图标消失，你可以看到一些图像数据。")],1)]),t._v(" "),a("li",[a("p",[t._v("缓存（Cache）我们可以看作是一个中间层，它可以是"),a("font",{attrs:{color:"#DD1144"}},[t._v("永久性")]),t._v("的将热点数据进行缓存，使得访问速度更快，例如我们通过 Memory、Redis 等将数据从硬盘或其它第三方接口中请求过来进行缓存，目的就是将数据存于内存的缓存区中，这样对同一个资源进行访问，速度会更快，也是性能优化一个重要的点。")],1)])]),t._v(" "),a("h3",{attrs:{id:"_2-buffer与string比较"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-buffer与string比较","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. Buffer与String比较")]),t._v(" "),a("p",[t._v("在"),a("code",[t._v("HTTP")]),t._v("传输中传输的是二进制数据，那么如果使用"),a("code",[t._v("Buffer")]),t._v("和"),a("code",[t._v("String")]),t._v("情况如下：")]),t._v(" "),a("ul",[a("li",[t._v("接口如果直接返回的字符串，这时候 HTTP 在传输之前会先将字符串转换为"),a("code",[t._v("Buffer")]),t._v("类型，以二进制数据传输，通过流（Stream）的方式一点点返回到客户端。")]),t._v(" "),a("li",[t._v("但是直接返回"),a("code",[t._v("Buffer")]),t._v("类型，则少了每次的转换操作，对于性能也是有提升的。")])]),t._v(" "),a("p",[a("font",{attrs:{color:"#1E90FF"}},[t._v("所以在一些Web 应用中，对于静态数据可以预先转为 Buffer 进行传输，可以有效减少 CPU 的重复使用（重复的字符串转 Buffer 操作）")])],1),t._v(" "),a("p",[a("strong",[t._v("参考资料")])]),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"https://juejin.im/post/5d3a3b8ff265da1b8d166323",target:"_blank",rel:"noopener noreferrer"}},[t._v("Node.js 中的缓冲区（Buffer）究竟是什么？"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/5cbdc9006fb9a0324f17900f",target:"_blank",rel:"noopener noreferrer"}},[t._v("彻底理解Node.js中的Buffer"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/5b76e6a86fb9a019fe684018",target:"_blank",rel:"noopener noreferrer"}},[t._v("Node JS Buffer使用理解"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://max.book118.com/html/2015/1101/28282096.shtm",target:"_blank",rel:"noopener noreferrer"}},[t._v("深入浅出Node.js"),a("OutboundLink")],1)])])])},[],!1,null,null,null);s.default=e.exports}}]);