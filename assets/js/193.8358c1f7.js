(window.webpackJsonp=window.webpackJsonp||[]).push([[193],{377:function(_,t,v){"use strict";v.r(t);var a=v(0),e=Object(a.a)({},function(){var _=this,t=_.$createElement,v=_._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h1",{attrs:{id:"rest和它的6个限制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#rest和它的6个限制","aria-hidden":"true"}},[_._v("#")]),_._v(" REST和它的6个限制")]),_._v(" "),v("h2",{attrs:{id:"rest是什么"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#rest是什么","aria-hidden":"true"}},[_._v("#")]),_._v(" REST是什么")]),_._v(" "),v("p",[_._v("如果有人问你"),v("code",[_._v("REST")]),_._v("是什么？\n你可以言简意赅的回答："),v("font",{attrs:{color:"#3eaf7c"}},[v("code",[_._v("REST")]),_._v("是一种风格，是万维网软件架构的风格")]),_._v(".")],1),_._v(" "),v("p",[_._v("如果有人问你"),v("code",[_._v("REST")]),_._v("是用来干什么的？\n这种风格是万维网软件架构风格，"),v("font",{attrs:{color:"#3eaf7c"}},[_._v("它必然是用来架构万维网软件的，用来创建网络服务")]),_._v(".")],1),_._v(" "),v("p",[_._v("如果有人问你这种风格为什么叫"),v("code",[_._v("REST")]),_._v("？\n"),v("code",[_._v("REST")]),_._v("的全称是"),v("code",[_._v("(Resource)Representational State Transfer")])]),_._v(" "),v("ul",[v("li",[_._v("单词"),v("code",[_._v("Resource")]),_._v("在这里虽然没有表现，但确实最重要的。任何能被命名的信息都能作为一个资源，我们抽象出来的资源都应该是可标识的，都应该拥有一个明显的"),v("code",[_._v("ID")]),_._v("——在"),v("code",[_._v("Web")]),_._v("中，代表"),v("code",[_._v("ID")]),_._v("的统一概念是："),v("code",[_._v("URI")]),_._v("（统一资源标识符）")]),_._v(" "),v("li",[_._v("其中"),v("code",[_._v("Representational")]),_._v("字面意思是： "),v("font",{attrs:{color:"#3eaf7c"}},[_._v("表述是一段对于资源在某个特定时刻的状态的描述，描述形式有JSON,XML等等")]),_._v("，虽然"),v("code",[_._v("REST")]),_._v("对数据传输的格式并没有做限制，但是最佳实践中还是"),v("code",[_._v("json")]),_._v("这种媒体类型用的最多")],1),_._v(" "),v("li",[_._v("其中"),v("code",[_._v("State")]),_._v("表示当前的状态或者数据，因为数据在变化的每个阶段都是一种状态，所以用状态来描述数据显示了数据是会变化的，会修改的")]),_._v(" "),v("li",[_._v("其中"),v("code",[_._v("Transfer")]),_._v("表示数据传输，但是客户端和服务端之间传送的是 "),v("font",{attrs:{color:"#3eaf7c"}},[_._v("资源的表述")]),_._v(" ，而不是资源本身，客户端和服务器端之间转移（transfer）代表资源状态的表述。通过转移和操作资源的表述，来间接实现操作资源的目的。")],1)]),_._v(" "),v("p",[_._v("所以我们将"),v("code",[_._v("REST")]),_._v("称为"),v("font",{attrs:{color:"#3eaf7c"}},[_._v("资源表述性状态转移")]),_._v(",通俗的讲就是："),v("font",{attrs:{color:"#3eaf7c"}},[_._v("资源在网络中以某种表现形式进行状态转移")])],1),_._v(" "),v("h2",{attrs:{id:"rest的6个限制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#rest的6个限制","aria-hidden":"true"}},[_._v("#")]),_._v(" REST的6个限制")]),_._v(" "),v("h3",{attrs:{id:"_1-客户-服务器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-客户-服务器","aria-hidden":"true"}},[_._v("#")]),_._v(" 1. 客户-服务器")]),_._v(" "),v("p",[_._v("客户-服务器（Client-Server）也叫作"),v("code",[_._v("CS")]),_._v("架构，这个是非常常见了，现在几乎没有什么不是"),v("code",[_._v("CS")]),_._v("架构了，这个限制的本质是一种软件架构思想叫做 "),v("font",{attrs:{color:"#3eaf7c"}},[_._v("关注点分离")]),_._v("，通俗的说就是"),v("font",{attrs:{color:"#3eaf7c"}},[_._v("各扫门前雪，自己管好自己的事")])],1),_._v(" "),v("ul",[v("li",[_._v("服务端专注数据存储，提升了简单性: 之前的服务端要渲染页面还要存储数据，现在只用数据存储，从而代码也变得更加简单")]),_._v(" "),v("li",[_._v("前端专注用户界面，提升了可移植性: 现在前端只用调用接口渲染界面，而现在这种功能很多平台都支持，所以可移植性提升了")])]),_._v(" "),v("h3",{attrs:{id:"_2-无状态"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-无状态","aria-hidden":"true"}},[_._v("#")]),_._v(" 2. 无状态")]),_._v(" "),v("p",[_._v("无状态（Stateless）指的是 "),v("font",{attrs:{color:"#3eaf7c"}},[_._v("所有用户会话信息都保存在客户端")]),_._v(",所有的会话信息服务端是不管的，服务端不会知道当前用户的状态")],1),_._v(" "),v("p",[_._v("所以"),v("font",{attrs:{color:"#3eaf7c"}},[_._v("每次请求必须包括所有信息，不能依赖上下文信息")]),_._v(": 比如说你在看一本小说，要看下一页，你必须告诉服务端下一页的页码数是几，不能告诉服务端我要看下一页，因为服务端不知道你当前在第几页，它不知道你当前的状态，无法判断。")],1),_._v(" "),v("p",[_._v("这样的好处是服务端不会保存会话信息，提升了简单性，可靠性，可见性")]),_._v(" "),v("ul",[v("li",[_._v("服务端不用管理会话信息，就少了一大部分代码，提升了简单性")]),_._v(" "),v("li",[_._v("可靠性指的是软件的稳定程度和从一次故障中恢复正常的能力，如果服务端管理会话信息，一旦出错，会话信息就会完全丢失，恢复起来极其困难")]),_._v(" "),v("li",[_._v("可见性指的是模块和接口的透明程度，因为每次请求都会包含所有信息，所以接口更加透明")])]),_._v(" "),v("h3",{attrs:{id:"_3-缓存"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-缓存","aria-hidden":"true"}},[_._v("#")]),_._v(" 3. 缓存")]),_._v(" "),v("p",[_._v("缓存（Cache）的具体意思是："),v("font",{attrs:{color:"#3eaf7c"}},[_._v("所有服务端的相应都要被标位可缓存或者不可缓存")])],1),_._v(" "),v("p",[_._v("缓存的作用就是 "),v("font",{attrs:{color:"#3eaf7c"}},[_._v("减少了前后端交互，提升了性能")]),_._v("。比如"),v("code",[_._v("js")]),_._v("文件，"),v("code",[_._v("css")]),_._v("文件等静态资源，这些东西缓存在客户端即可，不要每次都想服务端请求")],1),_._v(" "),v("h3",{attrs:{id:"_4-统一接口"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-统一接口","aria-hidden":"true"}},[_._v("#")]),_._v(" 4. 统一接口")]),_._v(" "),v("p",[_._v("统一接口（Uniform interface）这个限制是最重要的一个，因为像"),v("code",[_._v("cs")]),_._v("架构或者缓存，别的风格也会用，但是只有统一接口最能表现"),v("code",[_._v("REST")]),_._v("的特点")]),_._v(" "),v("ul",[v("li",[v("font",{attrs:{color:"#3eaf7c"}},[_._v("统一")]),_._v("：接口设计尽可能统一通用，提升了简单性，可见性")],1),_._v(" "),v("li",[v("font",{attrs:{color:"#3eaf7c"}},[_._v("接口")]),_._v("：接口与实现解耦，使前后端可以独立开发迭代")],1)]),_._v(" "),v("h3",{attrs:{id:"_5-分层系统"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_5-分层系统","aria-hidden":"true"}},[_._v("#")]),_._v(" 5. 分层系统")]),_._v(" "),v("p",[_._v("分层系统（layered System）指的是软件架构分很多系统，"),v("font",{attrs:{color:"#3eaf7c"}},[_._v("每层只知道相邻的一层，后面隐藏的就不知道了")]),_._v("，比如说：客户端不知道是和代理还是真实的服务器通信")],1),_._v(" "),v("p",[_._v("分层系统还有其他层:")]),_._v(" "),v("ul",[v("li",[_._v("安全层（专门负责错误处理）")]),_._v(" "),v("li",[_._v("负载均衡（流量多，负载强，管理流量分发）")]),_._v(" "),v("li",[_._v("缓存层等（静态资源缓存）")])]),_._v(" "),v("p",[_._v("我们在后面会介绍很多中间件来说明这些不同层级")]),_._v(" "),v("h3",{attrs:{id:"_6-按需代码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_6-按需代码","aria-hidden":"true"}},[_._v("#")]),_._v(" 6. 按需代码")]),_._v(" "),v("p",[_._v("按需代码（code-on-demand）这个是可选的，也不是很重要")]),_._v(" "),v("p",[_._v("客户端可以下载运行服务端传来的代码（比如JS）。通过减少了一些功能，简化了客户端")]),_._v(" "),v("h2",{attrs:{id:"统一接口的具体限制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#统一接口的具体限制","aria-hidden":"true"}},[_._v("#")]),_._v(" 统一接口的具体限制")]),_._v(" "),v("p",[_._v("统一接口是上面我们讲的6个限制之一，表明接口要尽可能设计的统一，那么问题来了，被设计统一的接口长什么样子？我们下面就要去说。")]),_._v(" "),v("h3",{attrs:{id:"_1-资源的标识"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-资源的标识","aria-hidden":"true"}},[_._v("#")]),_._v(" 1. 资源的标识")]),_._v(" "),v("p",[_._v("资源是任何可以命名的事物，比如用户，评论等，每个资源可以通过URI（统一资源标识符）被唯一的标识")]),_._v(" "),v("p",[_._v("比如要访问"),v("code",[_._v("github")]),_._v("用户列表的资源，我们只能去访问下面这样的"),v("code",[_._v("URL")])]),_._v(" "),v("div",{staticClass:"language-bash extra-class"},[v("pre",{pre:!0,attrs:{class:"language-bash"}},[v("code",[_._v("https://api.github.com/users\nhttps://api.github.com/users/lewis617\n")])])]),v("h3",{attrs:{id:"_2-通过表述来操作资源"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-通过表述来操作资源","aria-hidden":"true"}},[_._v("#")]),_._v(" 2. 通过表述来操作资源")]),_._v(" "),v("p",[_._v("表述就是"),v("code",[_._v("Representation")]),_._v(",比如"),v("code",[_._v("JSON")]),_._v(","),v("code",[_._v("XML")]),_._v("等等，通过表述来操作资源意思就是："),v("font",{attrs:{color:"#3eaf7c"}},[_._v("客户端不能直接操作（比如SQL）服务端资源，客户端应该通过表述（比如JSON）来操作资源")]),_._v("。")],1),_._v(" "),v("h3",{attrs:{id:"_3-自描述信息"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-自描述信息","aria-hidden":"true"}},[_._v("#")]),_._v(" 3. 自描述信息")]),_._v(" "),v("p",[_._v("每个信息（请求或者响应）必须提供足够的信息让接受者理解，这个消息指的就是请求或者响应携带的数据,具体指：")]),_._v(" "),v("ul",[v("li",[_._v("媒体类型（"),v("code",[_._v("application/json")]),_._v(", "),v("code",[_._v("applicaiton/xml")]),_._v("）")]),_._v(" "),v("li",[_._v("http方法："),v("code",[_._v("GET")]),_._v(","),v("code",[_._v("POST")]),_._v(","),v("code",[_._v("DELETE")])]),_._v(" "),v("li",[_._v("是否缓存："),v("code",[_._v("Cache-Control")])])]),_._v(" "),v("h3",{attrs:{id:"_4-超媒体作为应用状态引擎"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-超媒体作为应用状态引擎","aria-hidden":"true"}},[_._v("#")]),_._v(" 4. 超媒体作为应用状态引擎")]),_._v(" "),v("p",[_._v("超媒体作为应用状态引擎这个虽然听起来很难，但是我们来解释一下这些词汇：")]),_._v(" "),v("ul",[v("li",[_._v("超媒体：带文字的连接")]),_._v(" "),v("li",[_._v("应用状态：一个网页")]),_._v(" "),v("li",[_._v("引擎：驱动跳转")])]),_._v(" "),v("p",[_._v("所以超媒体作为应用状态引擎通俗的讲就是：点击链接跳转到另一个网页")]),_._v(" "),v("p",[v("strong",[_._v("参考资料")])]),_._v(" "),v("ol",[v("li",[v("a",{attrs:{href:"https://juejin.im/entry/57f8a128da2f60004f8b0ca6",target:"_blank",rel:"noopener noreferrer"}},[_._v("REST 学习 1 - 推导 REST"),v("OutboundLink")],1)]),_._v(" "),v("li",[v("a",{attrs:{href:"https://juejin.im/entry/59dc8771f265da430d56f8e4",target:"_blank",rel:"noopener noreferrer"}},[_._v("理解本质的 REST"),v("OutboundLink")],1)]),_._v(" "),v("li",[v("a",{attrs:{href:"https://juejin.im/post/5991667b518825485d28dfb1",target:"_blank",rel:"noopener noreferrer"}},[_._v("[译] REST API 已死，GraphQL 长存"),v("OutboundLink")],1)])])])},[],!1,null,null,null);t.default=e.exports}}]);