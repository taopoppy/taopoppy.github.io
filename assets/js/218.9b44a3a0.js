(window.webpackJsonp=window.webpackJsonp||[]).push([[218],{403:function(t,a,s){"use strict";s.r(a);var n=s(0),e=Object(n.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"异步写法和流程控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步写法和流程控制","aria-hidden":"true"}},[t._v("#")]),t._v(" 异步写法和流程控制")]),t._v(" "),s("p",[s("font",{attrs:{color:"#3eaf7c"}},[t._v("流程控制")]),t._v("是程序当中的逻辑控制的统称，为什么到"),s("code",[t._v("Node")]),t._v("当中就成了"),s("font",{attrs:{color:"#3eaf7c"}},[t._v("异步流程控制")]),t._v("？这个和"),s("code",[t._v("node")]),t._v("本身的异步流程有关，若每个函数都是异步的，性能虽会更好，但会造成"),s("code",[t._v("callback hell")]),t._v("(回调地狱)问题，为了解决这种"),s("code",[t._v("API")]),t._v("级别的回调地狱问题，便引入了异步流程控制。")],1),t._v(" "),s("p",[t._v("为什么说异步流程控制如此重要，因为基于"),s("code",[t._v("node")]),t._v("的事件循环执行机制和非阻塞"),s("code",[t._v("I/O")]),t._v(",异步成为常态，如果你对异步和异步写法不是很熟悉，你势必会在"),s("code",[t._v("node")]),t._v("程序当中迷失方向，可以很负责任的说这么一句话：")]),t._v(" "),s("ul",[s("li",[s("font",{attrs:{color:"#3eaf7c"}},[t._v("掌握了node中的异步流程控制，你就掌握了Node当中一半以上的内容")])],1)]),t._v(" "),s("p",[t._v("异步流程控制的解决方案发展的非常迅速，从实现了"),s("font",{attrs:{color:"#CC99CD"}},[t._v("Thunk")]),t._v(",到"),s("font",{attrs:{color:"#CC99CD"}},[t._v("Promise/A+")]),t._v("规范落地，到"),s("code",[t._v("ES6")]),t._v("当中的"),s("font",{attrs:{color:"#CC99CD"}},[t._v("Generator")]),t._v("和"),s("font",{attrs:{color:"#CC99CD"}},[t._v("co")]),t._v("模块，以及到现在目前为止最被看好的"),s("font",{attrs:{color:"#CC99CD"}},[t._v("async")]),t._v("和"),s("font",{attrs:{color:"#CC99CD"}},[t._v("await")]),t._v("方案")],1),t._v(" "),s("h2",{attrs:{id:"异步调用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步调用","aria-hidden":"true"}},[t._v("#")]),t._v(" 异步调用")]),t._v(" "),s("p",[s("font",{attrs:{color:"#3eaf7c"}},[t._v("异步调用是node当中的精髓")]),t._v("，掌握了异步写法就能在编程当中游刃有余，但是想要熟悉异步调用我们必须从最基础的概念了解，首先要懂的什么是异步和同步")],1),t._v(" "),s("h3",{attrs:{id:"_1-异步和同步"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-异步和同步","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 异步和同步")]),t._v(" "),s("ul",[s("li",[s("font",{attrs:{color:"#3eaf7c"}},[t._v("同步")]),t._v("：必须等到别人的回复才能干别的事情，至死方休")],1),t._v(" "),s("li",[s("font",{attrs:{color:"#3eaf7c"}},[t._v("异步")]),t._v("：充分利用时间差，合理运用时间高效做事，各不耽误")],1)]),t._v(" "),s("p",[t._v("虽然这样的定义可以并不是很好懂，但是现在我们可以举个例子，比如你现在向教务处打电话要查询成绩，查完成绩要去吃饭，查成绩和吃饭实际上没有任何联系，只是你脑海里有这么个先后顺序。教务处的负责人在电话里这样说：“你先别挂电话，我马上给你查”。然后在他查询成绩的这段时间你就只能握住电话等待，但是你也不知道他啥时候查完，假如人家查了1个小时，你就必须等一个小时后再去吃饭。这就是同步，当我们和其他有交互的时候必须等待别人回复我们才能做后面的事。")]),t._v(" "),s("p",[t._v("由于信号不好，现在你又打电话给教务处打电话查询成绩，此时教务处的负责人在电话里这样说：“我们这边已经有你的电话了，等我们查到你成绩了给你回电话”，说完他就挂了电话，此时的你在教务处回复你的期间可以去吃饭，你可以吃饭，你还可以旅游去，也不用等待和担心，因为教务处查到成绩会自动给你回话，这就是异步，充分利用了打电话和最后知道成绩的这个期间的时间干自己的事。")]),t._v(" "),s("p",[s("code",[t._v("node")]),t._v("当中的同步和异步也是如此，如果两个操作没有直接的联系，只有书写代码先后执行的问题，那么最好用异步的方式去执行，这样不会造成后面程序的执行阻塞在同步的等待当中。")]),t._v(" "),s("h3",{attrs:{id:"_2-浏览器和node的异步原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-浏览器和node的异步原理","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. 浏览器和node的异步原理")]),t._v(" "),s("p",[t._v("不知道你们发现了没有，在异步调用当中，我们自己是无法独自完成异步，必须依靠某个东西和我们共同完成，就好比上个例子当中的教务处负责人，他负责接收我的查成绩的请求，并在查到成绩后主动给我电话或发短信通知我。至于他是自己用电脑去学校系统上查还是叫下属拿出成绩册看，我们并不关心实际交互的过程。所以这个教务处的负责人是整个异步的核心。")]),t._v(" "),s("p",[s("font",{attrs:{color:"#3eaf7c"}},[t._v("所以不管什么异步模式当中是一定有这样一个核心中间人，去做最重要的三件事：")]),s("font",{attrs:{color:"#CC99CD"}},[t._v("接收异步请求")]),t._v("、"),s("font",{attrs:{color:"#CC99CD"}},[t._v("发生异步交互")]),t._v("、"),s("font",{attrs:{color:"#CC99CD"}},[t._v("返回异步响应")])],1),t._v(" "),s("p",[s("strong",[t._v("1. 浏览器中的异步")])]),t._v(" "),s("p",[t._v("我们知道在浏览器当中异步模式是依赖于"),s("font",{attrs:{color:"#3eaf7c"}},[t._v("Ajax")]),t._v("的，而"),s("code",[t._v("Ajax")]),t._v("中的核心，或者核心中间人就是"),s("font",{attrs:{color:"#CC99CD"}},[t._v("XMLHttpRequest")]),t._v("，如下图：")],1),t._v(" "),s("img",{attrs:{src:t.$withBase("/async_ajax_brower.png"),alt:"浏览器中的异步"}}),t._v(" "),s("p",[t._v("如上图,"),s("code",[t._v("Ajax")]),t._v("定义好请求和回调函数后，剩下的事情就交给"),s("code",[t._v("XMLHttpRequest")]),t._v("处理，"),s("code",[t._v("XMLHttpRequest")]),t._v("会和服务器交互，并产生时间差役，所以异步操作能够很好的解决这个问题，不需要刷新页面就能获取数据。")]),t._v(" "),s("p",[s("strong",[t._v("2. node中的异步")])]),t._v(" "),s("p",[t._v("我们知道在"),s("code",[t._v("Node")]),t._v("当中异步模式是依赖于"),s("font",{attrs:{color:"#3eaf7c"}},[t._v("异步非阻塞I/O模型")]),t._v("的，而这种模型中的核心，或者核心中间人就是"),s("font",{attrs:{color:"#CC99CD"}},[t._v("EventLoop")]),t._v("，如下图：")],1),t._v(" "),s("img",{attrs:{src:t.$withBase("/async_node_js.png"),alt:"node中的异步"}}),t._v(" "),s("p",[t._v("如上图，我们在调用"),s("code",[t._v("Node API")]),t._v("方法的时候，会把具体操作和回调函数交给"),s("code",[t._v("EventLoop")]),t._v("去执行，"),s("code",[t._v("EventLoop")]),t._v("维护了一个事件队列，当异步函数执行的时候，会把回调函数放进事件队列当中，"),s("code",[t._v("V8")]),t._v("引擎知道异步函数执行完成才会开始处理"),s("code",[t._v("EventLoop")]),t._v(",这意味着"),s("code",[t._v("JavaScript")]),t._v("代码不是多线程的，及时好像看起来能同时执行多个线程的任务")]),t._v(" "),s("p",[s("strong",[t._v("3. 总结")])]),t._v(" "),s("p",[t._v("无论是"),s("code",[t._v("Ajax")]),t._v("还是"),s("code",[t._v("Node")]),t._v(",都是借助"),s("font",{attrs:{color:"#3eaf7c"}},[t._v("中间层")]),t._v("来进行实际操作的，在使用的时候无须过多关注中间层之后的操作就能完成功能开发，这就是"),s("code",[t._v("Node")]),t._v("的特点，能够以最小的成本获取高性能，只需要专注写代码即可。")],1),t._v(" "),s("h3",{attrs:{id:"_3-异步好处和问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-异步好处和问题","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. 异步好处和问题")]),t._v(" "),s("p",[t._v("虽然"),s("code",[t._v("node")]),t._v("当中也有很多同步的"),s("code",[t._v("API")]),t._v(",但是同步和异步的写法造成的结果也很大：")]),t._v(" "),s("ul",[s("li",[t._v("同步方式更容易理解，但是会造成线程阻塞，无法最大限度的利用系统资源")]),t._v(" "),s("li",[t._v("异步方式需要嵌套回调，即使代码写的非常规范也不容易理解和维护，但是它能够"),s("font",{attrs:{color:"#3eaf7c"}},[t._v("并行执行")]),t._v("，同时处理更多任务，效率更高")],1)]),t._v(" "),s("p",[t._v("但是异步的通常最大的问题就是： "),s("font",{attrs:{color:"#CC99CD"}},[t._v("执行结果不是我们想要的，或者我们理想状态的结果")]),t._v("，因为异步执行的结果具有一定的不确定性，所以如何提高可控性是开发人员要解决的问题，也是"),s("code",[t._v("Node")]),t._v("当中最难的点。所以你可以看到关于流程控制的技术再不断的更新和发展，下面我们就会去从最基础的"),s("code",[t._v("node")]),t._v("自带的异步写法开始了解，最后到更好的异步流程写法，让"),s("code",[t._v("node")]),t._v("工程师在异步的世界中如鱼得水。")],1),t._v(" "),s("h2",{attrs:{id:"node自带的异步写法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node自带的异步写法","aria-hidden":"true"}},[t._v("#")]),t._v(" node自带的异步写法")]),t._v(" "),s("p",[s("code",[t._v("node")]),t._v("当中有两种事件处理的方式，分别是"),s("font",{attrs:{color:"#3eaf7c"}},[t._v("callback（回调）")]),t._v("和"),s("font",{attrs:{color:"#3eaf7c"}},[t._v("EventEmitter（事件发射器）")]),t._v("，这里我们先要说的就是"),s("font",{attrs:{color:"#CC99CD"}},[t._v("callback采用的是错误优先的回调方式，EventEmitter采用的是事件驱动当中的事件发射器")])],1),t._v(" "),s("h3",{attrs:{id:"_1-callback"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-callback","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. callback")]),t._v(" "),s("p",[t._v("因为"),s("code",[t._v("callback")]),t._v("采用的是错误优先的回调方式，而这种方式只需要注意两条规则即可：")]),t._v(" "),s("ul",[s("li",[t._v("回调函数的第一个参数返回的是"),s("code",[t._v("error")]),t._v("对象，如果错误发生，该对象会作为第一个参数返回，如果执行正常，一般的做法是将"),s("code",[t._v("error")]),t._v("返回"),s("code",[t._v("null")])]),t._v(" "),s("li",[t._v("回调函数的第二个参数返回的是所有成功响应的响应结果数据，如果结果正常，那么参数"),s("code",[t._v("err")]),t._v("就会被设置为"),s("code",[t._v("null")]),t._v(",并在第二个参数上面返回正确结果")])]),t._v(" "),s("p",[t._v("我们知道"),s("font",{attrs:{color:"#CC99CD"}},[t._v("异常处理实际上是异步流程控制当中最难的部分")]),t._v("，异常主要分为"),s("font",{attrs:{color:"#3eaf7c"}},[t._v("系统错误")]),t._v("和"),s("font",{attrs:{color:"#3eaf7c"}},[t._v("程序员错误")]),t._v("，系统错误包括请求超时，系统内存不足，远程连接服务失败等等，一般需要搭配系统监控等辅助软件解决。而程序员错误产生的原因比较复杂，比如咋异步调用的时候没有使用回调，无法读取"),s("code",[t._v("undefined")]),t._v("对象的属性，在高并发的场合使用了同步阻塞代码等等，但是这些错误可以通过"),s("font",{attrs:{color:"#CC99CD"}},[t._v("书写合适的错误处理代码，启动日志服务，记录错误")]),t._v("的方法来修改和避免错误，下面我们来举个例子说明怎么书写合适的错误处理代码：")],1),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fs'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("readJSON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("filePath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  fs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("filePath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("上面这种错误的示例告诉我们有两种错误需要我们通过书写合适的代码去监控和处理，分别是"),s("font",{attrs:{color:"#3eaf7c"}},[t._v(" 回调函数中错误对象err ")]),t._v("和"),s("font",{attrs:{color:"#3eaf7c"}},[t._v(" 运行时错误 ")]),t._v("，而我们的解决方法也很简单：")],1),t._v(" "),s("ul",[s("li",[s("font",{attrs:{color:"#CC99CD"}},[t._v("模块应该暴露错误优先的回调接口")]),t._v("：或者说我们在回调函数中应该先考虑错误对象"),s("code",[t._v("err")]),t._v("存在的情况")],1),t._v(" "),s("li",[s("font",{attrs:{color:"#CC99CD"}},[t._v("多去增加异常捕获的写法")]),t._v("：按照程序一定会出错的方向去考虑怎么写异常捕获，多使用"),s("code",[t._v("try-catch")]),t._v("和短路操作运算符来避免错误发生导致程序奔溃的情况")],1)]),t._v(" "),s("p",[t._v("然后我们来看上面的例子会发生什么错误，首先没有对"),s("code",[t._v("err")]),t._v("进行错误处理，导致如果"),s("code",[t._v("err")]),t._v("对象存在的时候，"),s("code",[t._v("data")]),t._v("就是"),s("code",[t._v("null")]),t._v(",而"),s("code",[t._v("JSON.parse")]),t._v("无法将字符串转化成为对象的时候就会抛出异常，所以我们既要对回调函数当中的错误对象优先处理，还要考虑程序本身可能会发生的运行时错误：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fs'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("readJSON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("filePath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  fs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("readFile")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("filePath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 优先处理回调函数中的err对象")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("err"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 使用try-catch捕获JSON解析的错误")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      parseJson "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("JSON")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一切正常的时候我们直接调用回调函数")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parseJson"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"_2-eventemitter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-eventemitter","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. EventEmitter")]),t._v(" "),s("p",[s("strong",[t._v("1. EventEmitter入门")])]),t._v(" "),s("p",[t._v("事件模块是"),s("code",[t._v("Node.js")]),t._v("内置的对观察者模式的实现，通过"),s("code",[t._v("EventEmitter")]),t._v("属性提供一个构造函数，这个构造函数的示例中具有两个常用的方法，其中"),s("code",[t._v("on")]),t._v("方法可以用来监听指定事件，并处罚回调函数，另外一个"),s("code",[t._v("emit")]),t._v("方法可以用来发布事件。我们来看一个简单的代码：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" EventEmitter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'events'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" observer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EventEmitter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nobserver"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'topic'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'topic has occured! '")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'start'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  observer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("emit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'public topic'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'end'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// start; topic has occured ; end")]),t._v("\n")])])]),s("p",[s("code",[t._v("EventEmitter")]),t._v("可以理解为"),s("code",[t._v("发布/订阅")]),t._v("模式，"),s("code",[t._v("topic")]),t._v("是主题，"),s("code",[t._v("observer")]),t._v("首先通过"),s("code",[t._v("on")]),t._v("方法进行注册，对"),s("code",[t._v("topic")]),t._v("事件进行订阅，当"),s("code",[t._v("observer")]),t._v("调用"),s("code",[t._v("emit")]),t._v("方法时，所有通过"),s("code",[t._v("on")]),t._v("注册该"),s("code",[t._v("topic")]),t._v("事件的回调函数都会被调用。上述代码也表明，"),s("code",[t._v("EventEmitter")]),t._v("对象的事件触发和监听是同步的，即只有在事件的回调函数是异步的情况下，函数"),s("code",[t._v("emit")]),t._v("才会被触发执行")]),t._v(" "),s("p",[s("strong",[t._v("2. EventEmitter相关用法")])]),t._v(" "),s("p",[s("code",[t._v("events")]),t._v("模块只提供了一个对象："),s("code",[t._v("events.EventEmitter")]),t._v("，而"),s("code",[t._v("EventEmitter")]),t._v("的核心部分就是对事件触发和事件监听功能的封装，遇到错误时，会触发"),s("code",[t._v("error")]),t._v("事件，当增加一个监听者的时候，会触发"),s("code",[t._v("newListener")]),t._v("事件，移除一个监听者会触发"),s("code",[t._v("removeListener")]),t._v("事件，总之该对象提供了很多方法和属性，具体请查看"),s("a",{attrs:{href:"http://nodejs.cn/api/events.html#events_event_newlistener",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网"),s("OutboundLink")],1)]),t._v(" "),s("p",[s("code",[t._v("Node.js")]),t._v("允许同一个事件最多指定10个回调函数，可以通过"),s("code",[t._v(".setMaxListeners(20)")]),t._v("或者"),s("code",[t._v(".setMaxListeners(Infinity)")])]),t._v(" "),s("p",[s("code",[t._v("once")]),t._v("方法回调函数只会被触发一次，而在"),s("code",[t._v("on")]),t._v("方法当中会被触发多次，而且执行该方法会返回一个"),s("code",[t._v("EventEmitter")]),t._v("对象，因此可以链式加载监听函数")]),t._v(" "),s("p",[t._v("获取监听器信息是通过"),s("code",[t._v(".listeners")]),t._v("方法实现的，改方法接受一个事件名称作为参数，返回由该事件所有回调函数组成的数组")]),t._v(" "),s("h3",{attrs:{id:"_3-风格选择"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-风格选择","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. 风格选择")]),t._v(" "),s("p",[t._v("通过上述我们对"),s("code",[t._v("callback")]),t._v("和"),s("code",[t._v("EventEmitter")]),t._v("写法的分析可以看出：")]),t._v(" "),s("ul",[s("li",[s("font",{attrs:{color:"#3eaf7c"}},[t._v("采用回调函数的写法，代码可读性很强，是参数同步语义化的传统思路")])],1),t._v(" "),s("li",[s("font",{attrs:{color:"#3eaf7c"}},[t._v("EventEmitter写法语义更清晰，可以帮助学习者非常容易理解异步原理")])],1)]),t._v(" "),s("p",[t._v("但是要注意，两种写法都能实现相同的功能，现实当中选择什么样的风格也许取决于个人爱好或者公司规定，但是从单纯使用的角度来讲："),s("font",{attrs:{color:"#CC99CD"}},[t._v(" API推荐使用错误优先（callback）的回调方式，和Node.js SDK风格保持一致是最好的。但是在同一个对象当中，使用EventEmitter解耦可以合理利用集成，使局部代码可读性更强 ")])],1),t._v(" "),s("h2",{attrs:{id:"更好的异步流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#更好的异步流程","aria-hidden":"true"}},[t._v("#")]),t._v(" 更好的异步流程")]),t._v(" "),s("p",[t._v("这一小节的内容非常多，我们会在下面的两个章节"),s("a",{attrs:{href:"https://www.taopoppy.cn/node/three_asyncPreliminary.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("异步流程初探"),s("OutboundLink")],1),t._v("和"),s("a",{attrs:{href:"https://www.taopoppy.cn/node/three_asyncDepth.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("异步流程重点解析"),s("OutboundLink")],1),t._v("当中深刻讲解异步的东西。")])])},[],!1,null,null,null);a.default=e.exports}}]);