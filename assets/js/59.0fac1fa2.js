(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{246:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"前端自动化测试简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前端自动化测试简介","aria-hidden":"true"}},[t._v("#")]),t._v(" 前端自动化测试简介")]),t._v(" "),a("h2",{attrs:{id:"背景及原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#背景及原理","aria-hidden":"true"}},[t._v("#")]),t._v(" 背景及原理")]),t._v(" "),a("p",[t._v("前端最常见的3中自动化测试的方法："),a("font",{attrs:{color:"#3eaf7c"}},[t._v("单元测试")]),t._v("、"),a("font",{attrs:{color:"#3eaf7c"}},[t._v("集成测试")]),t._v("、"),a("font",{attrs:{color:"#3eaf7c"}},[t._v("end-to-end(端到端测试)")])],1),t._v(" "),a("p",[t._v("我们希望有这样一种写法来帮助我们测试结果，比如说我们已经有"),a("code",[t._v("add")]),t._v("和"),a("code",[t._v("minus")]),t._v("两个函数，我们希望这样测试：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"测试加法 3 + 7"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toBe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("那么我们就需要这样来编写"),a("code",[t._v("test")]),t._v("函数和"),a("code",[t._v("expect")]),t._v("函数")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("result")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("toBe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("actual")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" actual"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throw")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("`预期值和实际值不一样，预期是")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("actual"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("，结果是")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("result"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("decs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("desc"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("通过测试`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("desc"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("没有通过测试 ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("error"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("所以前端自动化是什么?前端自动化就是"),a("font",{attrs:{color:"#3eaf7c"}},[t._v("实际就是我们写的js测试代码，通过对比预期值和实际值来判断代码的正确性")])],1),t._v(" "),a("h2",{attrs:{id:"测试框架"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#测试框架","aria-hidden":"true"}},[t._v("#")]),t._v(" 测试框架")]),t._v(" "),a("p",[t._v("前端自动化测试库有很多："),a("code",[t._v("Jasmine")]),t._v("，"),a("code",[t._v("MOCHA")]),t._v(","),a("code",[t._v("Jest")]),t._v(",那么我们这次使用的就是"),a("code",[t._v("Jest")]),t._v("，因为在性能、功能和易用性表现的比较好，实际上其他测试库也不差，底层原理都差不多，学会一门通所有，我们下面说说"),a("code",[t._v("Jest")]),t._v("的优点：")]),t._v(" "),a("ul",[a("li",[a("font",{attrs:{color:"#CC99CD"}},[t._v("速度快")]),t._v("：没有修改的代码是不会重新运行测试代码的")],1),t._v(" "),a("li",[a("font",{attrs:{color:"#CC99CD"}},[t._v("API简单")]),t._v("：数量少，容易学")],1),t._v(" "),a("li",[a("font",{attrs:{color:"#CC99CD"}},[t._v("易配置")]),t._v("：通过配置文件简单配置")],1),t._v(" "),a("li",[a("font",{attrs:{color:"#CC99CD"}},[t._v("隔离性好")]),t._v("：测试文件之间相互隔离")],1),t._v(" "),a("li",[a("font",{attrs:{color:"#CC99CD"}},[t._v("监控模式")]),t._v("：更灵活的运行测试用例")],1),t._v(" "),a("li",[a("font",{attrs:{color:"#CC99CD"}},[t._v("IDE整合")]),t._v("：容易合IDE做整合")],1),t._v(" "),a("li",[a("font",{attrs:{color:"#CC99CD"}},[t._v("Snaphot")]),t._v("：快速解决不重要的测试")],1),t._v(" "),a("li",[a("font",{attrs:{color:"#CC99CD"}},[t._v("多项目并行")]),t._v("：同时测试node和vue的测试用例")],1),t._v(" "),a("li",[a("font",{attrs:{color:"#CC99CD"}},[t._v("覆盖率")]),t._v("：通过简单的命令即可生成报告")],1),t._v(" "),a("li",[a("font",{attrs:{color:"#CC99CD"}},[t._v("MOCK丰富")]),t._v("：提供很多Mock机制")],1),t._v(" "),a("li",[a("font",{attrs:{color:"#CC99CD"}},[t._v("支持新型技术")]),t._v("：比如"),a("code",[t._v("Babel")]),t._v(","),a("code",[t._v("typescript")]),t._v(","),a("code",[t._v("node")]),t._v("等等")],1),t._v(" "),a("li",[a("font",{attrs:{color:"#CC99CD"}},[t._v("插件丰富")]),t._v("：在"),a("code",[t._v("vue")]),t._v("中结合"),a("code",[t._v("Vue-test-utils")]),t._v("对组件进行测试，在"),a("code",[t._v("react")]),t._v("中结合"),a("code",[t._v("Enzyme")]),t._v("对组件测试")],1)])])},[],!1,null,null,null);s.default=e.exports}}]);