(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{252:function(_,v,a){"use strict";a.r(v);var t=a(0),r=Object(t.a)({},function(){var _=this,v=_.$createElement,a=_._self._c||v;return a("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[a("h1",{attrs:{id:"sql-vs-nosql"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sql-vs-nosql","aria-hidden":"true"}},[_._v("#")]),_._v(" SQL VS NOSQL")]),_._v(" "),a("p",[_._v("在现在的市场大概分为两类数据库：")]),_._v(" "),a("ul",[a("li",[a("font",{attrs:{color:"#3eaf7c"}},[_._v("SQL")]),_._v("：MySQL、Oracle、SQLServer、PostGreSQL")],1),_._v(" "),a("li",[a("font",{attrs:{color:"#3eaf7c"}},[_._v("NOSQL")]),_._v(":HBase、MongoDB、Redis、Hadoo")],1)]),_._v(" "),a("h2",{attrs:{id:"关系数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关系数据库","aria-hidden":"true"}},[_._v("#")]),_._v(" 关系数据库")]),_._v(" "),a("h3",{attrs:{id:"_1-关系型数据库的特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-关系型数据库的特点","aria-hidden":"true"}},[_._v("#")]),_._v(" 1. 关系型数据库的特点")]),_._v(" "),a("p",[_._v("关系型数据库的特点有下面这些：")]),_._v(" "),a("ul",[a("li",[_._v("数据结构化存储在二维表中。（现在关系型数据库也能存json这种数据结构）")]),_._v(" "),a("li",[_._v("支持事务的原子性A、一致性C、隔离性I、持久性D")]),_._v(" "),a("li",[_._v("支持使用SQL语言对存储在其中的数据进行操作")])]),_._v(" "),a("h3",{attrs:{id:"_2-关系型数据库的使用场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-关系型数据库的使用场景","aria-hidden":"true"}},[_._v("#")]),_._v(" 2. 关系型数据库的使用场景")]),_._v(" "),a("ul",[a("li",[_._v("数据之间存在着一定关系，需要关联查询数据的场景")]),_._v(" "),a("li",[_._v("需要事务支持的业务场景（严格保证数据存储的完整性）")]),_._v(" "),a("li",[_._v("需要对数据进行灵活的统计分析的场景")])]),_._v(" "),a("h3",{attrs:{id:"_3-关系型数据库选型原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-关系型数据库选型原则","aria-hidden":"true"}},[_._v("#")]),_._v(" 3. 关系型数据库选型原则")]),_._v(" "),a("ul",[a("li",[_._v("数据库使用的广泛性")]),_._v(" "),a("li",[_._v("数据库的可扩展性")]),_._v(" "),a("li",[_._v("数据库的安全性和稳定性")]),_._v(" "),a("li",[_._v("数据库所支持的系统")]),_._v(" "),a("li",[_._v("数据库的使用成本")])]),_._v(" "),a("h3",{attrs:{id:"_4-关系型数据库选择原则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-关系型数据库选择原则","aria-hidden":"true"}},[_._v("#")]),_._v(" 4. 关系型数据库选择原则")]),_._v(" "),a("ul",[a("li",[a("code",[_._v("MySQL")]),_._v("的使用广泛，在三大关系型数据库中是唯一开源的")]),_._v(" "),a("li",[a("code",[_._v("MySQL")]),_._v("的可扩展性很强，支持基于二进制日志的逻辑复制，存在多种第三方数据库中间层，支持读写分离及分库分表")]),_._v(" "),a("li",[a("code",[_._v("MySQL")]),_._v("主从复制集群可高达99%的可用性，配合主从复制高可用架构可以达到99.99%的可用性")]),_._v(" "),a("li",[_._v("支持对存储在"),a("code",[_._v("MySQL")]),_._v("的数据进行分级安全控制")]),_._v(" "),a("li",[a("code",[_._v("MySQL")]),_._v("支持"),a("code",[_._v("Linux")]),_._v("和"),a("code",[_._v("Window")]),_._v("系统")]),_._v(" "),a("li",[a("code",[_._v("MySQL")]),_._v("社区版本免费，使用人员众多")])]),_._v(" "),a("h2",{attrs:{id:"非关系数据库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#非关系数据库","aria-hidden":"true"}},[_._v("#")]),_._v(" 非关系数据库")]),_._v(" "),a("h3",{attrs:{id:"_1-关系型数据库的特点-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-关系型数据库的特点-2","aria-hidden":"true"}},[_._v("#")]),_._v(" 1. 关系型数据库的特点")]),_._v(" "),a("ul",[a("li",[_._v("存储结构灵活，没有固定的结构（每个对象都要包含所有属性的名称，存储空间大）")]),_._v(" "),a("li",[_._v("不完全支持事务的特性，在查询和写入数据时无需对数据的完整性检查，读写效率高于关系型数据库，非常适合处理日志的场景，对数据的并发处理性能高")]),_._v(" "),a("li",[_._v("大多不适用SQL语言操作数据")])]),_._v(" "),a("h3",{attrs:{id:"_2-关系型数据库的使用场景-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-关系型数据库的使用场景-2","aria-hidden":"true"}},[_._v("#")]),_._v(" 2. 关系型数据库的使用场景")]),_._v(" "),a("ul",[a("li",[_._v("数据结构不固定的场景（比如存储拥有不同属性的产品）")]),_._v(" "),a("li",[_._v("对事务要求不高，但读写并发比较大的场景（日志分析，用户行为分析）")]),_._v(" "),a("li",[_._v("对数据的处理操作比较简单的场景")])])])},[],!1,null,null,null);v.default=r.exports}}]);