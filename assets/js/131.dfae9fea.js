(window.webpackJsonp=window.webpackJsonp||[]).push([[131],{313:function(o,t,_){"use strict";_.r(t);var e=_(0),a=Object(e.a)({},function(){var o=this,t=o.$createElement,_=o._self._c||t;return _("ContentSlotsDistributor",{attrs:{"slot-key":o.$parent.slotKey}},[_("h1",{attrs:{id:"学习go语言"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#学习go语言","aria-hidden":"true"}},[o._v("#")]),o._v(" 学习go语言")]),o._v(" "),_("h2",{attrs:{id:"什么是go语言"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#什么是go语言","aria-hidden":"true"}},[o._v("#")]),o._v(" 什么是go语言")]),o._v(" "),_("p",[_("code",[o._v("Go")]),o._v("语言的设计初衷是这样的：")]),o._v(" "),_("ul",[_("li",[_("font",{attrs:{color:"#1E90FF"}},[o._v("针对其他语言的痛点进行设计")])],1),o._v(" "),_("li",[_("font",{attrs:{color:"#1E90FF"}},[o._v("并加入并发编程")])],1),o._v(" "),_("li",[_("font",{attrs:{color:"#1E90FF"}},[o._v("为大数据，为服务，并发而生的通用编程语言")])],1)]),o._v(" "),_("p",[_("code",[o._v("Go")]),o._v("语言很特别：")]),o._v(" "),_("ul",[_("li",[_("font",{attrs:{color:"#DD1144"}},[o._v("没有对象，没有继承多态，没有泛型，没有try/catch")])],1),o._v(" "),_("li",[_("font",{attrs:{color:"#DD1144"}},[o._v("有接口，函数式变成，"),_("code",[o._v("csp")]),o._v("并发模型（"),_("code",[o._v("goroutine")]),o._v(" + "),_("code",[o._v("channel")]),o._v("）")])],1),o._v(" "),_("li",[_("font",{attrs:{color:"#3eaf7c"}},[o._v("学习go语言重要的不是语法，而是改变三观")])],1)]),o._v(" "),_("p",[_("code",[o._v("Go")]),o._v("语言的学习路线：")]),o._v(" "),_("ul",[_("li",[_("font",{attrs:{color:"#3eaf7c"}},[o._v("基本语法")]),o._v("：变量，选择，循环等")],1),o._v(" "),_("li",[_("font",{attrs:{color:"#3eaf7c"}},[o._v("面向接口")]),o._v("：结构体，"),_("code",[o._v("duck typing")]),o._v("的概念，组合的思想")],1),o._v(" "),_("li",[_("font",{attrs:{color:"#3eaf7c"}},[o._v("函数式编程")]),o._v("：比如闭包的概念")],1),o._v(" "),_("li",[_("font",{attrs:{color:"#3eaf7c"}},[o._v("工程化")]),o._v("：资源管理，错误处理，测试和文档，性能调优")],1),o._v(" "),_("li",[_("font",{attrs:{color:"#3eaf7c"}},[o._v("并发编程")]),o._v("："),_("code",[o._v("goroutine")]),o._v("和"),_("code",[o._v("channel")]),o._v("，理解调度器")],1)]),o._v(" "),_("p",[o._v("实战项目的架构图：\n"),_("img",{attrs:{src:o.$withBase("/go_one_prpject_jiagou.png"),alt:"项目架构图"}})]),o._v(" "),_("h2",{attrs:{id:"go的安装"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#go的安装","aria-hidden":"true"}},[o._v("#")]),o._v(" Go的安装")]),o._v(" "),_("p",[o._v("登录到"),_("a",{attrs:{href:"https://studygolang.com/dl",target:"_blank",rel:"noopener noreferrer"}},[o._v("https://studygolang.com/dl"),_("OutboundLink")],1),o._v("然后下载对应系统的文件，然后傻瓜式的一步步安装即可。")]),o._v(" "),_("p",[o._v("安装完后可以在命令行中使用"),_("code",[o._v("go")]),o._v("或者"),_("code",[o._v("go version")]),o._v("来查看"),_("code",[o._v("go")]),o._v("的安装是否成功和具体的下载版本。")]),o._v(" "),_("p",[_("font",{attrs:{color:"#1E90FF"}},[o._v("我们强调要使用1.13.3以后的版本，因为在这个版本后面会有一个对国内的用户非常好的功能，就是镜像功能")]),o._v("，"),_("font",{attrs:{color:"#DD1144"}},[o._v("通过go env命令来查看go的一些设置，可以看到GOPROXY=https://proxy.golang.org,direct")]),o._v("，这个配置就是帮助我们拉取一些依赖的时候直接从"),_("code",[o._v("https://proxy.golang.org")]),o._v("这个网址拉取，如果不行，就重定向到原本的地址中去拉取。")],1),o._v(" "),_("h3",{attrs:{id:"_1-修改镜像"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-修改镜像","aria-hidden":"true"}},[o._v("#")]),o._v(" 1. 修改镜像")]),o._v(" "),_("p",[o._v("但是"),_("code",[o._v("https://proxy.golang.org")]),o._v("在国内连接依旧比较困难，我们可以使用一个国内的镜像："),_("font",{attrs:{color:"#DD1144"}},[o._v("goproxy.cn")]),o._v(",所以我们可以在终端执行命令：")],1),o._v(" "),_("div",{staticClass:"language-go extra-class"},[_("pre",{pre:!0,attrs:{class:"language-go"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[o._v("go")]),o._v(" env "),_("span",{pre:!0,attrs:{class:"token operator"}},[o._v("-")]),o._v("w GOPROXY"),_("span",{pre:!0,attrs:{class:"token operator"}},[o._v("=")]),o._v("https"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[o._v(":")]),_("span",{pre:!0,attrs:{class:"token operator"}},[o._v("/")]),_("span",{pre:!0,attrs:{class:"token operator"}},[o._v("/")]),o._v("goproxy"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[o._v(".")]),o._v("cn"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[o._v(",")]),o._v("direct\n")])])]),_("h3",{attrs:{id:"_2-修改模块"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-修改模块","aria-hidden":"true"}},[o._v("#")]),o._v(" 2. 修改模块")]),o._v(" "),_("p",[o._v("做过"),_("code",[o._v("Go")]),o._v("项目的同学应该知道"),_("code",[o._v("GOPATH")]),o._v("是个比较烦人的东西，在新版本当中我们需要设置一个"),_("font",{attrs:{color:"#DD1144"}},[o._v("GO111MODULE")]),o._v("的东西，"),_("font",{attrs:{color:"#1E90FF"}},[o._v("这个东西好比一个开关，在GOPATH路径下面GO111MODULE的值就是on，否则就是off，为来避免不必要的坑，统一设置为on")]),o._v(":")],1),o._v(" "),_("div",{staticClass:"language-go extra-class"},[_("pre",{pre:!0,attrs:{class:"language-go"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[o._v("go")]),o._v(" env "),_("span",{pre:!0,attrs:{class:"token operator"}},[o._v("-")]),o._v("w GO111MODULE"),_("span",{pre:!0,attrs:{class:"token operator"}},[o._v("=")]),o._v("on\n")])])]),_("h3",{attrs:{id:"_3-下载goimports"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-下载goimports","aria-hidden":"true"}},[o._v("#")]),o._v(" 3. 下载goimports")]),o._v(" "),_("p",[o._v("在你的命令行中执行：")]),o._v(" "),_("div",{staticClass:"language-go extra-class"},[_("pre",{pre:!0,attrs:{class:"language-go"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[o._v("go")]),o._v(" get "),_("span",{pre:!0,attrs:{class:"token operator"}},[o._v("-")]),o._v("v golang"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[o._v(".")]),o._v("org"),_("span",{pre:!0,attrs:{class:"token operator"}},[o._v("/")]),o._v("x"),_("span",{pre:!0,attrs:{class:"token operator"}},[o._v("/")]),o._v("tools"),_("span",{pre:!0,attrs:{class:"token operator"}},[o._v("/")]),o._v("cmd"),_("span",{pre:!0,attrs:{class:"token operator"}},[o._v("/")]),o._v("goimports\n")])])]),_("h3",{attrs:{id:"_4-配置ide"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-配置ide","aria-hidden":"true"}},[o._v("#")]),o._v(" 4. 配置IDE")]),o._v(" "),_("ul",[_("li",[_("p",[_("font",{attrs:{color:"#3eaf7c"}},[o._v("GoLand")])],1),o._v(" "),_("ul",[_("li",[_("code",[o._v("Goland")]),o._v("自身就包含"),_("code",[o._v("go")]),o._v("的插件和"),_("code",[o._v("file watcher")]),o._v("插件，所以我们不需要下载。我们打开"),_("code",[o._v("File/setting")]),o._v("查询修改"),_("code",[o._v("parameter hint")]),o._v("为"),_("code",[o._v("off")]),o._v("，取消参数提醒")])]),o._v(" "),_("img",{attrs:{src:o.$withBase("/go_one_golandconifg1.png"),alt:"配置1"}}),o._v(" "),_("ul",[_("li",[o._v("并且查询修改"),_("code",[o._v("file watcher")]),o._v(",点击加号，添加"),_("code",[o._v("goimports")]),o._v("，然后点击"),_("code",[o._v("ok")]),o._v("即可，这样保存之后就能执行"),_("code",[o._v("goimports")]),o._v("之前那个下载的插件的功能了，格式化代码。")])]),o._v(" "),_("img",{attrs:{src:o.$withBase("/go_one_golandconfig2.png"),alt:"配置2"}})]),o._v(" "),_("li",[_("p",[_("font",{attrs:{color:"#3eaf7c"}},[o._v("idea + Go插件")])],1),o._v(" "),_("ul",[_("li",[o._v("如果你使用这种方式需要在打开编辑器的时候通过"),_("code",[o._v("configure/plugins")]),o._v("去下载"),_("code",[o._v("Go")]),o._v("的插件和"),_("code",[o._v("file watcher")]),o._v("插件，后者是能利用之前我们下载的"),_("code",[o._v("goimports")]),o._v("来在保存文件的时候去格式化代码的。然后创建这个项目的时候需要选择"),_("code",[o._v("Go Modules")]),o._v("，然后修"),_("code",[o._v("Proxy")]),o._v("为"),_("code",[o._v("https://goproxy.cn,direct")]),o._v(",然后创建一个项目。")]),o._v(" "),_("li",[o._v("创建一个"),_("code",[o._v("hello")]),o._v("的文件，然后书写一段简单的代码：")])]),o._v(" "),_("div",{staticClass:"language-go extra-class"},[_("pre",{pre:!0,attrs:{class:"language-go"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[o._v("package")]),o._v(" main\n\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[o._v("import")]),o._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[o._v('"fmt"')]),o._v("\n\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[o._v("func")]),o._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[o._v("main")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[o._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[o._v(")")]),o._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[o._v("{")]),o._v("\n\tfmt"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[o._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[o._v("Println")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[o._v("(")]),_("span",{pre:!0,attrs:{class:"token string"}},[o._v('"hello world"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[o._v(")")]),o._v("\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[o._v("}")]),o._v("\n")])])]),_("p",[o._v("点击"),_("code",[o._v("func")]),o._v("左边的小绿点执行即可")]),o._v(" "),_("ul",[_("li",[o._v("我们打开"),_("code",[o._v("File/setting")]),o._v("查询修改"),_("code",[o._v("parameter hint")]),o._v("为"),_("code",[o._v("off")]),o._v("，取消参数提醒，并且查询修改"),_("code",[o._v("file watcher")]),o._v(",添加"),_("code",[o._v("goimports")]),o._v("，这样保存之后就能执行"),_("code",[o._v("goimports")]),o._v("之前那个下载的插件的功能了，格式化代码。")])])]),o._v(" "),_("li",[_("p",[_("font",{attrs:{color:"#3eaf7c"}},[o._v("VS code")])],1),o._v(" "),_("ul",[_("li",[_("code",[o._v("vscode")]),o._v("虽然没有创建项目的能力，但是有扩展提示，但是使用了"),_("code",[o._v("go")]),o._v("语言，它会提示你去下载"),_("code",[o._v("go")]),o._v("文件的相关扩展。")]),o._v(" "),_("li",[_("font",{attrs:{color:"#1E90FF"}},[o._v("然后我们启动项目都需要使用go run hello.go这样的命令")])],1),o._v(" "),_("li",[o._v("另外"),_("code",[o._v("go.mod")]),o._v("在"),_("code",[o._v("vs code")]),o._v("也需要使用命令行手动生成："),_("font",{attrs:{color:"#DD1144"}},[o._v("go mod init learngo")]),o._v("，"),_("code",[o._v("learngo")]),o._v("是名字，你可以自己取。")],1)])])]),o._v(" "),_("h2",{attrs:{id:"go的依赖管理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#go的依赖管理","aria-hidden":"true"}},[o._v("#")]),o._v(" Go的依赖管理")]),o._v(" "),_("p",[o._v("什么叫做依赖？"),_("font",{attrs:{color:"#1E90FF"}},[o._v("依赖就是我们在书写项目的时候不可能任何功能都要我们自己写，会大量的引入第三方库，将代码创建在别人的基础设施之上")])],1),o._v(" "),_("p",[o._v("依赖管理经历了三个阶段："),_("font",{attrs:{color:"#DD1144"}},[o._v("GOPATH")]),o._v("、"),_("font",{attrs:{color:"#DD1144"}},[o._v("GOVENDOR")]),o._v("、"),_("font",{attrs:{color:"#DD1144"}},[o._v("go mod")]),o._v("，所以对于当前的我们学习的重点就是简单的了解一下前两个的流程，重点学习"),_("code",[o._v("go mod")]),o._v("的依赖管理，因为"),_("code",[o._v("go mod")]),o._v("是真正将"),_("code",[o._v("go")]),o._v("的依赖做进了"),_("code",[o._v("go")]),o._v("的命令当中。")],1),o._v(" "),_("h3",{attrs:{id:"_1-gopath"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1-gopath","aria-hidden":"true"}},[o._v("#")]),o._v(" 1. GOPATH")]),o._v(" "),_("p",[_("code",[o._v("GOPATH")]),o._v("说白了就是一个目录的路径，默认都是计算机的"),_("code",[o._v("/go")]),o._v("目录下面，然后所有的依赖都会放在这目录下，也就是所有的项目的依赖，反正你只要引入第三方，我就去"),_("code",[o._v("GOPATH")]),o._v("找，那这样的坏处当然就是体积会越来越大，如果你做的项目多了，时间也很久，这个目录的体积差不多和镜像一样了。当然了这还不是重要的问题，因为所有的项目的所有的依赖都是放在"),_("code",[o._v("GOPATH")]),o._v("对应的目录下，那么问题就来了："),_("font",{attrs:{color:"#1E90FF"}},[o._v("两个项目如果使用的是不同版本的第三方依赖")]),o._v("，此时"),_("code",[o._v("GOPATH")]),o._v("对应的第三方依赖只有一个版本，怎么解决？")],1),o._v(" "),_("h3",{attrs:{id:"_2-govendor"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2-govendor","aria-hidden":"true"}},[o._v("#")]),o._v(" 2. GOVENDOR")]),o._v(" "),_("p",[_("code",[o._v("GOVENDOR")]),o._v("就是解决不同项目对相同依赖不同版本的问题的，每个项目目录下会创建一个"),_("code",[o._v("vandor")]),o._v("的目录，放一些第三方依赖，当项目中引入了第三方依赖，会优先到这个目录下寻找是否有该库，找不到在到外面的"),_("code",[o._v("GOPATH")]),o._v("中找,但是通过"),_("code",[o._v("go get")]),o._v("下载下来的默认都在这个"),_("code",[o._v("GOPATH")]),o._v("对应的目录下，我们不想手动将其拷贝到项目中的"),_("code",[o._v("vendor")]),o._v("目录，就产生了大量的依赖管理工具:"),_("code",[o._v("glide")]),o._v("、"),_("code",[o._v("dep")]),o._v(","),_("code",[o._v("go dep")]),o._v("等等，通过配置它们给出的配置文件来管理依赖。")]),o._v(" "),_("p",[o._v("但是通过上面"),_("code",[o._v("GOPATH")]),o._v("和"),_("code",[o._v("GOVENDOR")]),o._v("外加上依赖管理工具，这一套下来简直就像在打补丁，越来越难，所以在现在的版本.终于通过"),_("code",[o._v("go mod")]),o._v("来原生的管理依赖")]),o._v(" "),_("h3",{attrs:{id:"_3-go-mod"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3-go-mod","aria-hidden":"true"}},[o._v("#")]),o._v(" 3. go mod")]),o._v(" "),_("p",[o._v("使用"),_("code",[o._v("go mod")]),o._v("后,(通过在idea中创建"),_("code",[o._v("go module")]),o._v("的项目)，然后会将所有依赖的信息放在"),_("code",[o._v("go.mod")]),o._v("文件中，并且产生一个"),_("code",[o._v("go.sum")]),o._v("文件来记录各个依赖和版本的以及哈希的详情，如果要更新版本，直接下载新的版本，然后使用"),_("font",{attrs:{color:"#DD1144"}},[o._v("go mod tidy")]),o._v(" 这个命令来清理不用的第三方依赖")],1),o._v(" "),_("p",[o._v("如果你使用的"),_("code",[o._v("idea")]),o._v("或者"),_("code",[o._v("goland")]),o._v("，那么这些东西可以在创建项目的时候直接使用"),_("code",[o._v("go(module)")]),o._v("创建项目，之前我们在最前面就说过，然后如果使用"),_("code",[o._v("vscode")]),o._v("，我们需要这样来操作："),_("font",{attrs:{color:"#1E90FF"}},[o._v("创建一个空的文件（比如test），然后通过cd进入test，使用命令go mod init test")]),o._v(",但是代理好像就不用设置了，因为最开始我们就已经设置过了。")],1),o._v(" "),_("p",[o._v("如果你还有不懂的，可以参照这个下面两个网址：")]),o._v(" "),_("ul",[_("li",[_("a",{attrs:{href:"https://www.mogublog.net/post/2295.html",target:"_blank",rel:"noopener noreferrer"}},[o._v("https://www.mogublog.net/post/2295.html"),_("OutboundLink")],1)]),o._v(" "),_("li",[_("a",{attrs:{href:"https://www.liwenzhou.com/posts/Go/00_go_in_vscode/",target:"_blank",rel:"noopener noreferrer"}},[o._v("https://www.liwenzhou.com/posts/Go/00_go_in_vscode/"),_("OutboundLink")],1)])]),o._v(" "),_("p",[o._v("下载第三方依赖基本就使用"),_("font",{attrs:{color:"#DD1144"}},[o._v("go get")]),o._v("命令就可以，但是我推荐你下载一个依赖的时候，最好去"),_("code",[o._v("github")]),o._v("上使用正规的人家给出的下载命令")],1),o._v(" "),_("p",[o._v("如果有旧的项目要迁移到"),_("code",[o._v("go mod")]),o._v("上，基本上两个命令就能搞定：")]),o._v(" "),_("div",{staticClass:"language-go extra-class"},[_("pre",{pre:!0,attrs:{class:"language-go"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[o._v("go")]),o._v(" mod init xxx\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[o._v("go")]),o._v(" build "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[o._v(".")]),_("span",{pre:!0,attrs:{class:"token operator"}},[o._v("/")]),_("span",{pre:!0,attrs:{class:"token operator"}},[o._v("...")]),o._v("\n")])])]),_("p",[_("code",[o._v("go mod init xxx")]),o._v("很好理解，就是当前文件创建"),_("code",[o._v("go mod")]),o._v("的依赖管理的方式，"),_("code",[o._v("go build ./...")]),o._v("就当前项目根目录和子目录都去编译一遍，看看有没有出错，这个命令如果项目中有两个以上的"),_("code",[o._v("module")]),o._v("是不会产生可执行文件的，如果你想产生可执行文件，你需要使用这个命令："),_("font",{attrs:{color:"#DD1144"}},[o._v("go install ./...")]),o._v(",会将所有产生的结果放在"),_("code",[o._v("go/bin")]),o._v("的目录下。")],1),o._v(" "),_("p",[_("font",{attrs:{color:"#DD1144"}},[o._v("go mod总结")]),o._v("：")],1),o._v(" "),_("ul",[_("li",[_("font",{attrs:{color:"#1E90FF"}},[o._v("由go命令统一的管理，用户不必关心目录结构")])],1),o._v(" "),_("li",[_("font",{attrs:{color:"#1E90FF"}},[o._v("初始化：go mod init")])],1),o._v(" "),_("li",[_("font",{attrs:{color:"#1E90FF"}},[o._v("更新依赖：go get [@v]; go mod tidy")])],1),o._v(" "),_("li",[_("font",{attrs:{color:"#1E90FF"}},[o._v("迁移旧项目：go mod init，go build ./...")])],1)]),o._v(" "),_("h3",{attrs:{id:"_4-目录结构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4-目录结构","aria-hidden":"true"}},[o._v("#")]),o._v(" 4.  目录结构")]),o._v(" "),_("p",[o._v("对于目录结构，尤其对于"),_("code",[o._v("main")]),o._v("来讲，必须单独放在一个目录中，同一个目录下不能有多个文件中都包含"),_("code",[o._v("main")]),o._v("函数，这些文件都必须通过单独创建一个目录来存放。")]),o._v(" "),_("p",[_("strong",[o._v("参考资料")])]),o._v(" "),_("ol",[_("li",[_("a",{attrs:{href:"https://github.com/ffhelicopter/Go42/blob/master/SUMMARY.md",target:"_blank",rel:"noopener noreferrer"}},[o._v("Go语言四十二章经"),_("OutboundLink")],1)]),o._v(" "),_("li",[_("a",{attrs:{href:"https://coding.imooc.com/class/chapter/180.html#Anchor",target:"_blank",rel:"noopener noreferrer"}},[o._v("Google资深工程师深度讲解Go语言"),_("OutboundLink")],1)]),o._v(" "),_("li",[_("a",{attrs:{href:"https://www.ctolib.com/docs/sfile/go-internals/index.html",target:"_blank",rel:"noopener noreferrer"}},[o._v("深入解析Go"),_("OutboundLink")],1)]),o._v(" "),_("li",[_("a",{attrs:{href:"https://time.geekbang.org/column/intro/112",target:"_blank",rel:"noopener noreferrer"}},[o._v("Go语言核心36讲"),_("OutboundLink")],1)]),o._v(" "),_("li",[_("a",{attrs:{href:"https://books.studygolang.com/The-Golang-Standard-Library-by-Example/chapter03/03.1.html",target:"_blank",rel:"noopener noreferrer"}},[o._v("Go语言标准库实践"),_("OutboundLink")],1)])])])},[],!1,null,null,null);t.default=a.exports}}]);