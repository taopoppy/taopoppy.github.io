(window.webpackJsonp=window.webpackJsonp||[]).push([[242],{426:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"css-进阶篇"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css-进阶篇","aria-hidden":"true"}},[t._v("#")]),t._v(" CSS 进阶篇")]),t._v(" "),a("h2",{attrs:{id:"重绘回流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重绘回流","aria-hidden":"true"}},[t._v("#")]),t._v(" 重绘回流")]),t._v(" "),a("h3",{attrs:{id:"_1-回流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-回流","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 回流")]),t._v(" "),a("p",[a("font",{attrs:{color:"#9400D3"}},[t._v("回流")]),t._v("又名"),a("font",{attrs:{color:"#DD1144"}},[t._v("重排")]),t._v("，"),a("font",{attrs:{color:"#1E90FF"}},[t._v("指几何属性需改变的渲染")]),t._v("。")],1),t._v(" "),a("p",[t._v("可理解成，将整个网页填白，对内容重新渲染一次。只不过以人眼的感官速度去看浏览器回流是不会有任何变化的，若你拥有闪电侠的感官速度去看浏览器回流(实质是将时间调慢)，就会发现 "),a("font",{attrs:{color:"#DD1144"}},[t._v("每次回流都会将页面清空，再从左上角第一个像素点从左到右从上到下这样一点一点渲染，直至右下角最后一个像素点")]),t._v("。每次回流都会呈现该过程，只是感受不到而已。")],1),t._v(" "),a("p",[t._v("渲染树的节点发生改变，影响了该节点的几何属性，导致该节点位置发生变化，此时就会触发浏览器回流并重新生成渲染树。回流意味着节点的几何属性改变，需重新计算并生成渲染树，导致渲染树的全部或部分发生变化。")]),t._v(" "),a("h3",{attrs:{id:"_2-重绘"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-重绘","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. 重绘")]),t._v(" "),a("p",[a("font",{attrs:{color:"#9400D3"}},[t._v("重绘")]),t._v("指更改外观属性而不影响几何属性的渲染。相比回流，重绘在两者中会温和一些，后续谈到的"),a("code",[t._v("CSS")]),t._v("性能优化就会基于该特点展开。")],1),t._v(" "),a("p",[t._v("渲染树的节点发生改变，但是不影响该节点的几何属性。由此可见，"),a("font",{attrs:{color:"#DD1144"}},[t._v("回流对浏览器性能的消耗是高于重绘的，而且回流一定会伴随重绘，重绘却不一定伴随回流。")])],1),t._v(" "),a("p",[t._v("为何回流一定会伴随重绘呢？整个节点的位置都变了，肯定要重新渲染它的外观属性啊！")]),t._v(" "),a("p",[a("font",{attrs:{color:"#1E90FF"}},[t._v("这里最好理解回流和重绘的例子就是回流是盖房子，重绘是装修房子，盖房子肯定消耗高于装修，而且盖完房子必定会装修，没有人会住毛坯房，但是装修不一定要盖房子，除非你装修坏了，无法弥补，然后你家有钱，把房子拆了又盖了一遍再重新装修。")])],1),t._v(" "),a("h3",{attrs:{id:"_3-性能优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-性能优化","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. 性能优化")]),t._v(" "),a("p",[t._v("回流重绘在操作节点样式时频繁出现，同时也存在很大程度上的性能问题。这就就是我们不推荐经常操作"),a("code",[t._v("DOM")]),t._v("的理由，也是像"),a("code",[t._v("React")]),t._v("和"),a("code",[t._v("Vue")]),t._v("这种框架中虚拟"),a("code",[t._v("DOM")]),t._v("解决的问题之一。")]),t._v(" "),a("p",[t._v("回流成本比重绘成本高得多，一个节点的回流很有可能导致子节点、兄弟节点或祖先节点的回流。在一些高性能电脑上也许没有什么影响，但是回流发生在手机上(明摆说某些安卓手机)，就会减缓加载速度和增加电量消耗。")]),t._v(" "),a("p",[t._v("回流重绘其实与浏览器的事件循环有关，以下源自对HTML文档的理解。")]),t._v(" "),a("ul",[a("li",[t._v("浏览器刷新频率为60Hz，即每16.6ms更新一次")]),t._v(" "),a("li",[t._v("事件循环执行完成微任务")]),t._v(" "),a("li",[t._v("判断"),a("code",[t._v("document")]),t._v("是否需更新")]),t._v(" "),a("li",[t._v("判断"),a("code",[t._v("resize/scroll")]),t._v("事件是否存在，存在则触发事件")]),t._v(" "),a("li",[t._v("判断"),a("code",[t._v("Media Query")]),t._v("是否触发")]),t._v(" "),a("li",[t._v("更新动作并发送事件")]),t._v(" "),a("li",[t._v("判断"),a("code",[t._v("document.isFullScreen")]),t._v("是否为"),a("code",[t._v("true")]),t._v("(全屏)")]),t._v(" "),a("li",[t._v("执行"),a("code",[t._v("requestAnimationFrame")]),t._v("回调")]),t._v(" "),a("li",[t._v("执行"),a("code",[t._v("IntersectionObserver")]),t._v("回调")]),t._v(" "),a("li",[t._v("更新界面")])]),t._v(" "),a("p",[t._v("上述就是浏览器每一帧中可能会做到的事情，若在一帧中有空闲时间，就会执行"),a("code",[t._v("requestIdleCallback")]),t._v("回调。")]),t._v(" "),a("p",[t._v("以下是对一些常用的几何属性和外观属性的分类：")]),t._v(" "),a("ul",[a("li",[a("font",{attrs:{color:"#9400D3"}},[t._v("几何属性")]),t._v("：包括布局、尺寸等可用数学几何衡量的属性\n"),a("ul",[a("li",[a("font",{attrs:{color:"#3eaf7c"}},[t._v("布局")]),t._v("：display、float、position、list、table、flex、columns、grid")],1),t._v(" "),a("li",[a("font",{attrs:{color:"#3eaf7c"}},[t._v("尺寸")]),t._v("：margin、padding、border、width、height")],1)])],1),t._v(" "),a("li",[a("font",{attrs:{color:"#9400D3"}},[t._v("外观属性")]),t._v("：包括界面、文字等可用状态向量描述的属性\n"),a("ul",[a("li",[a("font",{attrs:{color:"#3eaf7c"}},[t._v("界面")]),t._v("：appearance、outline、background、mask、box-shadow、box-reflect、filter、opacity、clip")],1),t._v(" "),a("li",[a("font",{attrs:{color:"#3eaf7c"}},[t._v("文字")]),t._v("：text、font、word")],1)])],1)]),t._v(" "),a("p",[t._v("以下是一些经常会引发性能问题的情况：")]),t._v(" "),a("ul",[a("li",[t._v("改变窗口大小")]),t._v(" "),a("li",[t._v("修改盒模型")]),t._v(" "),a("li",[t._v("增删样式")]),t._v(" "),a("li",[t._v("重构布局")]),t._v(" "),a("li",[t._v("重设尺寸")]),t._v(" "),a("li",[t._v("改变字体")]),t._v(" "),a("li",[t._v("改动文字")])]),t._v(" "),a("p",[t._v("我们针对上面这些情况，我们要做的有两点："),a("font",{attrs:{color:"#DD1144"}},[t._v("尽量避免大量出现这些情况")]),t._v("和"),a("font",{attrs:{color:"#DD1144"}},[t._v("在不得不出现这些情况的时候采用一些性能优化的方法尽量减少性能损耗")]),t._v(",下面我们就列举一下优化方法：")],1),t._v(" "),a("p",[a("font",{attrs:{color:"#1E90FF"}},[a("strong",[t._v("① 使用transform代替top")])])],1),t._v(" "),a("p",[a("code",[t._v("top")]),t._v("是几何属性，操作"),a("code",[t._v("top")]),t._v("会改变节点位置从而引发回流，使用"),a("code",[t._v("transform:translate3d(x,0,0)")]),t._v("代替"),a("code",[t._v("top")]),t._v("，只会引发图层重绘，还会间接启动GPU加速，该情况在之后会详细讲解。")]),t._v(" "),a("p",[a("font",{attrs:{color:"#1E90FF"}},[a("strong",[t._v("② 使用visibility:hidden替换display:none")])])],1),t._v(" "),a("p",[a("font",{attrs:{color:"#1E90FF"}},[a("strong",[t._v("③ 避免使用Table布局")])])],1),t._v(" "),a("p",[t._v("通常可用"),a("code",[t._v("ul")]),t._v("、"),a("code",[t._v("li")]),t._v("和"),a("code",[t._v("span")]),t._v("等标签取代"),a("code",[t._v("table")]),t._v("系列标签生成表格。")]),t._v(" "),a("p",[a("font",{attrs:{color:"#1E90FF"}},[a("strong",[t._v("④ 避免样式节点层级过多")])])],1),t._v(" "),a("p",[t._v("浏览器的"),a("code",[t._v("CSS")]),t._v("解析器解析"),a("code",[t._v("css")]),t._v("文件时，对CSS规则是从右到左匹配查找，样式层级过多会影响回流重绘效率，建议保持"),a("code",[t._v("CSS")]),t._v("规则在3层左右。")]),t._v(" "),a("p",[a("font",{attrs:{color:"#1E90FF"}},[a("strong",[t._v("⑤ 将频繁回流或重绘的节点设置为图层")])])],1),t._v(" "),a("p",[t._v("回流重绘生成的图层逐张合并并显示在屏幕上。可将其理解成"),a("code",[t._v("Photoshop")]),t._v("的图层，若不对图层添加关联，图层间是不会互相影响的。同理，在浏览器中设置频繁回流或重绘的节点为一张新图层，那么新图层就能够阻止节点的渲染行为影响别的节点，这张图层里怎样变化都无法影响到其他图层。")]),t._v(" "),a("p",[t._v("设置新图层有两种方法，将节点设置为"),a("code",[t._v("video")]),t._v("或"),a("code",[t._v("iframe")]),t._v("，为节点添加"),a("code",[t._v("will-change")]),t._v("。"),a("code",[t._v("will-change")]),t._v("是一个很叼的属性，后面再仔细讲。")]),t._v(" "),a("p",[a("font",{attrs:{color:"#1E90FF"}},[a("strong",[t._v("⑥ 动态改变类名而不改变样式")])])],1),t._v(" "),a("p",[t._v("要尝试每次操作"),a("code",[t._v("DOM")]),t._v("去改变节点样式，这样会频繁触发回流。")]),t._v(" "),a("p",[t._v("更好的方法是使用新的类名预定义节点样式，在执行逻辑操作时收集并确认最终更换的类名集合，在适合时机一次性动态替换原来的类名集合。有点像vue的依赖收集机制，不知这样描述会不会更容易理解。")]),t._v(" "),a("p",[t._v("这里举个例子：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 改变样式（不推荐）")]),t._v("\ndocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"div"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("top "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 改变类名")]),t._v("\ndocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"div"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("classList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("remove")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"show"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 移除ui这个类")]),t._v("\ndocument"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"div"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("classList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hide"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[a("font",{attrs:{color:"#1E90FF"}},[a("strong",[t._v("⑦ 避免节点属性值放在循环里当成循环变量")])])],1),t._v(" "),a("p",[a("font",{attrs:{color:"#DD1144"}},[t._v("每次循环操作DOM都会发生回流，应该在循环外使用变量保存一些不会变化的DOM映射值，你可能会疑惑像document.getElementById().style.top这种获取属性的代码也会操作回流，因为它属于操作DOM，而且为了获取精确结果，会在获取的时候回流一次再求结果")])],1),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不推荐")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" top "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"css"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("top"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("top"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 推荐")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" top "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"css"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("top"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("top"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("font",{attrs:{color:"#1E90FF"}},[a("strong",[t._v("⑧ 使用requestAnimationFrame作为动画速度帧")])])],1),t._v(" "),a("p",[t._v("动画速度越快，回流次数越多，上述有提到浏览器刷新频率为60Hz，即每16.6ms更新一次，而"),a("code",[t._v("requestAnimationFrame()")]),t._v("正是以16.6ms的速度更新一次。所以可用"),a("code",[t._v("requestAnimationFrame()")]),t._v("代替"),a("code",[t._v("setInterval()")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"_4-属性顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-属性顺序","aria-hidden":"true"}},[t._v("#")]),t._v(" 4. 属性顺序")]),t._v(" "),a("p",[t._v("关于"),a("code",[t._v("css")]),t._v("属性书写的顺序实际上会多多少少影响到"),a("code",[t._v("css")]),t._v("性能，这里我们也不多啰嗦怎么自己注意写顺序，我们只会告诉你怎么"),a("font",{attrs:{color:"#9400D3"}},[t._v("一键自动排序")]),t._v("，"),a("font",{attrs:{color:"#1E90FF"}},[t._v("配置完成后，次保存时会自动格式化CSS代码")])],1),t._v(" "),a("p",[t._v("在"),a("code",[t._v("VSCODE")]),t._v("当中下载好"),a("code",[t._v("Csscomb")]),t._v("插件之后，我们打开"),a("code",[t._v("文件 -> 首选项 -> 设置 -> 右上角的某个按钮（打开设置(json)）-> settings.json")]),t._v("，在这个"),a("code",[t._v("json")]),t._v("文件当中添加这个"),a("a",{attrs:{href:"https://github.com/JowayYoung/idea-css/blob/master/vscode/settings.json",target:"_blank",rel:"noopener noreferrer"}},[t._v("网站"),a("OutboundLink")],1),t._v("中的内容即可。")]),t._v(" "),a("h2",{attrs:{id:"布局方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#布局方式","aria-hidden":"true"}},[t._v("#")]),t._v(" 布局方式")]),t._v(" "),a("h2",{attrs:{id:"函数计算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数计算","aria-hidden":"true"}},[t._v("#")]),t._v(" 函数计算")]),t._v(" "),a("h2",{attrs:{id:"变量计算"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量计算","aria-hidden":"true"}},[t._v("#")]),t._v(" 变量计算")])])},[],!1,null,null,null);s.default=e.exports}}]);