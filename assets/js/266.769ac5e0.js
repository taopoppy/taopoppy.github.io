(window.webpackJsonp=window.webpackJsonp||[]).push([[266],{459:function(t,s,a){"use strict";a.r(s);var e=a(0),_=Object(e.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"react的核心原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#react的核心原理","aria-hidden":"true"}},[t._v("#")]),t._v(" React的核心原理")]),t._v(" "),a("h2",{attrs:{id:"属性和数据驱动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#属性和数据驱动","aria-hidden":"true"}},[t._v("#")]),t._v(" 属性和数据驱动")]),t._v(" "),a("h3",{attrs:{id:"_1-reactdevelopertools的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-reactdevelopertools的使用","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. Reactdevelopertools的使用")]),t._v(" "),a("ul",[a("li",[t._v("打开"),a("code",[t._v("chrome")]),t._v("浏览器，点击右上角的按钮（"),a("font",{attrs:{color:"#1E90FF"}},[t._v("自定义和控制Google Chrome")]),t._v("）")],1),t._v(" "),a("li",[t._v("选择"),a("font",{attrs:{color:"#1E90FF"}},[t._v("更多工具/扩展程序")]),t._v("，进入到"),a("code",[t._v("chrome://extensions")])],1),t._v(" "),a("li",[t._v("选择左上角的按钮（扩展程序），然后选择底部的按钮（"),a("font",{attrs:{color:"#1E90FF"}},[t._v("打开Chrome网上应用店")]),t._v("）")],1),t._v(" "),a("li",[t._v("左侧的搜索框中搜索"),a("code",[t._v("react")]),t._v(",会出现很多搜索结果")]),t._v(" "),a("li",[t._v("点击第一个搜索结果"),a("font",{attrs:{color:"#1E90FF"}},[t._v("React Developer Tools")]),t._v("后面的按钮（"),a("font",{attrs:{color:"#1E90FF"}},[t._v("添加至Chrome")]),t._v("）")],1)]),t._v(" "),a("p",[t._v("简单的几步就已经将扩展程序添加到浏览器当中，它的用处是这样的")]),t._v(" "),a("ul",[a("li",[a("font",{attrs:{color:"#DD1144"}},[t._v("在浏览器右上角出现一排图标，图标中多出一个react Devloper Tools的按钮，当前网页如果是react编写的，开发环境这个按钮会自动呈现红色，线上环境这个按钮会自动呈现黑色，否则是灰色")])],1),t._v(" "),a("li",[a("font",{attrs:{color:"#1E90FF"}},[t._v("这个工具在开发的时候，能实时监控组件的所有状态，帮助我们很好的做调试")]),t._v("\n每个组件都有自己的"),a("code",[t._v("props")]),t._v("参数，这些参数是从父组件接收的一些属性，我们这里来说"),a("font",{attrs:{color:"#DD1144"}},[t._v("如何给参数做校验(PropTypes)")]),t._v("和"),a("font",{attrs:{color:"#DD1144"}},[t._v("如何定义参数的默认值(DefaultProps)")])],1)]),t._v(" "),a("h3",{attrs:{id:"_2-proptypes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-proptypes","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. PropTypes")]),t._v(" "),a("p",[t._v("有的时候，组件对于父组件传递过来的参数有值和类型的要求，我们就需要定义给组件做参数类型和参数必要性的校验：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TodoItem.js")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" React "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" PropTypes "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'prop-types'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 引入包")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TodoItem")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里是组件本身的代码，请忽略")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TodoItem这个组件做属性校验")]),t._v("\nTodoItem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("propTypes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\ttest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PropTypes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isRequired"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 类型和必要性同时检测")]),t._v("\n\tcontent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PropTypes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("oneOfType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("PropTypes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" PropTypes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// content既可以是string类型也可以是number类型")]),t._v("\n\tdeleteItem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PropTypes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("func"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\tindex"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PropTypes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("number\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" TodoItem\n")])])]),a("ul",[a("li",[a("font",{attrs:{color:"#DD1144"}},[t._v("参数校验的类型校验必须通过引入prop-types这个包")]),t._v("，这个包是在"),a("code",[t._v("create-react-app")]),t._v("脚手架中自带的包")],1),t._v(" "),a("li",[a("font",{attrs:{color:"#1E90FF"}},[t._v("参数校验的必要性校验可以在类型后面添加.isRequired")]),t._v("，表示父组件使用这个组件的时候必须要传递这个参数，否则会报错")],1),t._v(" "),a("li",[t._v("关于参数的校验我们可以参照"),a("a",{attrs:{href:"https://react.caibaojian.com/docs/typechecking-with-proptypes.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("官网"),a("OutboundLink")],1),t._v("再去学习，因为官网给出的实例和类型都很全面")])]),t._v(" "),a("h3",{attrs:{id:"_3-defaultprops"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-defaultprops","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. DefaultProps")]),t._v(" "),a("p",[t._v("有时候，组件需要父组件传递一些参数，这些参数是可选的，所以在组件内部需要给参数一个默认值，"),a("font",{attrs:{color:"#1E90FF"}},[t._v("如果父组件不传递就使用这个默认值，父组件传递这个参数，参数就会覆盖默认值")])],1),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TodoItem.js")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" React "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'react'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" PropTypes "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'prop-types'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TodoItem")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("React"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Component")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里是组件本身的代码，请忽略")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nTodoItem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("propTypes "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\ttest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" PropTypes"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isRequired"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TodoItem这个组件做属性默认值的设置")]),t._v("\nTodoItem"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("defaultProps "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\ttest"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello world'")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 给props.test设置一个默认值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" TodoItem\n")])])]),a("h3",{attrs:{id:"_4-props和state和render函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-props和state和render函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 4. props和state和render函数")]),t._v(" "),a("p",[a("code",[t._v("react")]),t._v("是由数据驱动的框架，当数据变化，视图就会随着变化，背后的原理是什么呢？我们下面来讲解："),a("font",{attrs:{color:"#DD1144"}},[t._v("props,state和render函数之间存在什么样的关系，从而导致了数据驱动的效果")])],1),t._v(" "),a("p",[t._v("其实就是一句特别简单的话："),a("font",{attrs:{color:"#DD1144"}},[t._v("当组件的satate或者props发生改变的时候，render函数就会重新执行")])],1),t._v(" "),a("h2",{attrs:{id:"虚拟dom和diff算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#虚拟dom和diff算法","aria-hidden":"true"}},[t._v("#")]),t._v(" 虚拟DOM和Diff算法")]),t._v(" "),a("h3",{attrs:{id:"_1-react中的虚拟dom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-react中的虚拟dom","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. React中的虚拟DOM")]),t._v(" "),a("p",[t._v("我们知道虚拟"),a("code",[t._v("DOM")]),t._v("在数据驱动视图更新中有着至关重要的作用，但是我们如果直接理解虚拟"),a("code",[t._v("DOM")]),t._v("可能有有点费劲，我们现在来思考一个问题，来逐步思考虚拟"),a("code",[t._v("DOM")]),t._v("到底怎么来的又解决了什么问题。我们现在思考如果是你，实现一个数据更新驱动视图更新的功能，怎么做？")]),t._v(" "),a("p",[a("font",{attrs:{color:"#1E90FF"}},[a("strong",[t._v("① 完整替换")])])],1),t._v(" "),a("ul",[a("li",[a("code",[t._v("state")]),t._v("数据")]),t._v(" "),a("li",[a("code",[t._v("JSX")]),t._v("模板")]),t._v(" "),a("li",[t._v("数据 + 模板 结合，生成真实的"),a("code",[t._v("DOM")]),t._v("，来显示")]),t._v(" "),a("li",[a("code",[t._v("state")]),t._v("发生改变")]),t._v(" "),a("li",[t._v("数据 + 模板 结合，生成真实的"),a("code",[t._v("DOM")]),t._v("，替换原始的"),a("code",[t._v("DOM")])])]),t._v(" "),a("p",[t._v("缺陷：")]),t._v(" "),a("ul",[a("li",[t._v("第一次生成了完整的"),a("code",[t._v("DOM")]),t._v("片段")]),t._v(" "),a("li",[t._v("第二次生成了完整的"),a("code",[t._v("DOM")]),t._v("片段")]),t._v(" "),a("li",[t._v("第二次的"),a("code",[t._v("DOM")]),t._v("替换第一次的"),a("code",[t._v("DOM")]),t._v(",非常耗性能")])]),t._v(" "),a("p",[a("font",{attrs:{color:"#1E90FF"}},[a("strong",[t._v("② 寻找差异")])])],1),t._v(" "),a("ul",[a("li",[a("code",[t._v("state")]),t._v("数据")]),t._v(" "),a("li",[a("code",[t._v("JSX")]),t._v("模板")]),t._v(" "),a("li",[t._v("数据 + 模板 结合，生成真实的"),a("code",[t._v("DOM")]),t._v("，来显示")]),t._v(" "),a("li",[a("code",[t._v("state")]),t._v("发生改变")]),t._v(" "),a("li",[t._v("数据 + 模板 结合，生成真实的"),a("code",[t._v("DOM")]),t._v("，并不直接替换原始的"),a("code",[t._v("DOM")])]),t._v(" "),a("li",[t._v("新的"),a("code",[t._v("DOM")]),t._v("("),a("code",[t._v("DocumentFragment")]),t._v(")和原始的"),a("code",[t._v("DOM")]),t._v("做比对，找差异")]),t._v(" "),a("li",[t._v("找出变化的"),a("code",[t._v("DOM")]),t._v("节点")]),t._v(" "),a("li",[t._v("只用新的"),a("code",[t._v("DOM")]),t._v("中的变化的元素替换老的"),a("code",[t._v("DOM")]),t._v("中的变化的元素")])]),t._v(" "),a("p",[t._v("缺陷；")]),t._v(" "),a("ul",[a("li",[t._v("由于虽然减少了部分无变化的"),a("code",[t._v("DOM")]),t._v("的替换，但是也增加了新旧"),a("code",[t._v("DOM")]),t._v("比对的过程，性能提升并不明显")])]),t._v(" "),a("p",[a("font",{attrs:{color:"#1E90FF"}},[a("strong",[t._v("③ react的做法")])])],1),t._v(" "),a("ul",[a("li",[a("code",[t._v("state")]),t._v("数据")]),t._v(" "),a("li",[a("code",[t._v("JSX")]),t._v("模板")]),t._v(" "),a("li",[t._v("数据 + 模板 结合生成虚拟"),a("code",[t._v("DOM")]),t._v("("),a("font",{attrs:{color:"#DD1144"}},[t._v("虚拟DOM就是一个JS对象，用它来描述真实DOM的结构")]),t._v(")\n"),a("ul",[a("li",[t._v("（比如虚拟"),a("code",[t._v("DOM")]),t._v("是"),a("code",[t._v("['div',{id: 'abc'},['span', {}, 'hello world']]")]),t._v("）")])])],1),t._v(" "),a("li",[t._v("用虚拟"),a("code",[t._v("DOM")]),t._v("的结构来生成真实的"),a("code",[t._v("DOM")]),t._v("来显示\n"),a("ul",[a("li",[t._v("（比如真实的"),a("code",[t._v("DOM")]),t._v("是 "),a("code",[t._v("<div id='abc'><span>hello world</span></div>")]),t._v("）")])])]),t._v(" "),a("li",[a("code",[t._v("state")]),t._v("发生改变")]),t._v(" "),a("li",[t._v("数据 + 模板 结合生成新的虚拟"),a("code",[t._v("DOM")]),t._v(" "),a("ul",[a("li",[t._v("（比如虚拟"),a("code",[t._v("DOM")]),t._v("是"),a("code",[t._v("['div',{id: 'abc'},['span', {}, 'bye bye']]")]),t._v("）")])])]),t._v(" "),a("li",[t._v("比较新旧虚拟"),a("code",[t._v("DOM")]),t._v("，找到存在区别的元素内容")]),t._v(" "),a("li",[t._v("直接操作"),a("code",[t._v("DOM")]),t._v("，修改变化的部分")])]),t._v(" "),a("p",[t._v("通过了解react中组做法你就能够明白，react使用虚拟"),a("code",[t._v("DOM")]),t._v("能提升性能的两个地方在于")]),t._v(" "),a("ul",[a("li",[a("font",{attrs:{color:"#DD1144"}},[t._v("数据发生变化，不再生成新的DOM，而是虚拟DOM这种js对象，用js生成DOM远比用js生成js对象代价高的多")])],1),t._v(" "),a("li",[a("font",{attrs:{color:"#DD1144"}},[t._v("不再是新旧DOM之间的比对，而是虚拟DOM之间的比对，使用js比对DOM消耗性能远比用js比对js对象要高的多，")])],1)]),t._v(" "),a("p",[t._v("总结两点就是："),a("font",{attrs:{color:"#9400D3"}},[t._v("生成DOM变生成JS对象")]),t._v(" 和 "),a("font",{attrs:{color:"#9400D3"}},[t._v("DOM比对变成JS对象比对")])],1),t._v(" "),a("h3",{attrs:{id:"_2-深入理解虚拟dom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-深入理解虚拟dom","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. 深入理解虚拟DOM")]),t._v(" "),a("p",[t._v("现在我们需要搞清楚一个问题就是，我们使用"),a("code",[t._v("JSX")]),t._v("语法来书写代码，最终生成了真实的"),a("code",[t._v("DOM")]),t._v(",那么这个过程是怎么样的？")]),t._v(" "),a("ul",[a("li",[a("font",{attrs:{color:"#DD1144"}},[t._v("JSX语法会通过Babel编译成为React.createElement方法")])],1),t._v(" "),a("li",[a("font",{attrs:{color:"#DD1144"}},[t._v("React.createElement方法执行返回的就是一个JS对象，俗称虚拟DOM")])],1),t._v(" "),a("li",[a("font",{attrs:{color:"#DD1144"}},[t._v("虚拟DOM描述了真实DOM的结构，通过React中的ReactDOM.render()函数再生成真实的DOM并挂载到浏览器中")])],1)]),t._v(" "),a("img",{attrs:{src:t.$withBase("/react_redux_jsx.png"),alt:"JSX的本质"}}),t._v(" "),a("p",[t._v("通过上面这张流程图，你知道了"),a("code",[t._v("React")]),t._v("使用虚拟"),a("code",[t._v("DOM")]),t._v("的流程，但是"),a("code",[t._v("React")]),t._v("为什么要使用虚拟"),a("code",[t._v("DOM")]),t._v("，使用它有什么好处呢？")]),t._v(" "),a("ul",[a("li",[a("font",{attrs:{color:"#DD1144"}},[t._v("性能提升")]),t._v("（两个性能提升的点上面已说明）")],1),t._v(" "),a("li",[a("font",{attrs:{color:"#DD1144"}},[t._v("使得跨端应用得以实现，比如React Native，虚拟DOM在浏览器通过React被转化成为了真实的DOM，但是在移动端虚拟DOM也可以通过其他东西被转化成为原生的组件")]),t._v("，如上图所示")],1)]),t._v(" "),a("h3",{attrs:{id:"_3-diff算法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-diff算法","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. Diff算法")]),t._v(" "),a("p",[t._v("关于"),a("code",[t._v("Diff")]),t._v("算法，我们肯定不会深入讲其中的原理，我们只是来简单的介绍一下："),a("font",{attrs:{color:"#1E90FF"}},[t._v("Diff算法是用来帮助我们比对两个虚拟DOM区别的算法")]),t._v("，因为"),a("code",[t._v("Diff")]),t._v("的全程就是"),a("code",[t._v("Diffrence")]),t._v("，找不同的意思。")],1),t._v(" "),a("p",[a("font",{attrs:{color:"#1E90FF"}},[a("strong",[t._v("① setState为什么是异步的")])])],1),t._v(" "),a("p",[t._v("我们思考一下，两个虚拟"),a("code",[t._v("DOM")]),t._v("之间产生不同的原因归咎于数据发生了变化，无论是单个组件中数据变化，还是父子组件中的"),a("code",[t._v("prop")]),t._v("发生了变化，都是"),a("font",{attrs:{color:"#DD1144"}},[t._v("调用了setState方法修改了state")]),t._v("，而"),a("code",[t._v("setState")]),t._v("这个方法是异步的，我们来想一下，"),a("font",{attrs:{color:"#1E90FF"}},[t._v("为什么setState是异步的")]),t._v("：")],1),t._v(" "),a("ul",[a("li",[a("font",{attrs:{color:"#DD1144"}},[t._v("异步的原因肯定是为了提高性能，如果setState是同步的，连续多次调用这个方法，就会产生多个虚拟DOM ，从而造成多次新旧虚拟DOM之间的比对")])],1),t._v(" "),a("li",[a("font",{attrs:{color:"#DD1144"}},[t._v("但如果是异步的，按照异步事件循环的规则，多次异步方法会在下一次循环中执行，那么就可以将其何并，只做一次最后一次虚拟DOM的比对，提高性能")])],1)]),t._v(" "),a("p",[a("font",{attrs:{color:"#1E90FF"}},[a("strong",[t._v("② Diff比较的方式")])])],1),t._v(" "),a("p",[a("font",{attrs:{color:"#9400D3"}},[t._v("Diff算法中两个虚拟DOM的比对方式是同级比对，而且某一级如果不同，就不会再继续比对下去")]),t._v("，也就是说如果第一层都不一样，就不会比比较第二层，第三层，哪怕后面的所有都一样，也会全部重新替换，"),a("font",{attrs:{color:"#DD1144"}},[t._v("虽然同层比对可能会造成一些性能的损耗，但是这样的方式速度最快")])],1),t._v(" "),a("img",{attrs:{src:t.$withBase("/react_advanced_tongjibijiao.png"),alt:"同级比对"}}),t._v(" "),a("p",[a("font",{attrs:{color:"#1E90FF"}},[a("strong",[t._v("③ Key的终极解析")])])],1),t._v(" "),a("p",[t._v("知道了"),a("code",[t._v("Diff")]),t._v("是同层比对之后，现在再来彻底说明"),a("font",{attrs:{color:"#DD1144"}},[t._v("为什么在循环中要带key，并且key为什么不能用index")])],1),t._v(" "),a("img",{attrs:{src:t.$withBase("/react_advanced_key.png"),alt:"key的比较"}}),t._v(" "),a("p",[t._v("如上图，假如在一个循环中旧的虚拟DOM有4个节点，数据更新后，在数组的最中间插入另一个节点：")]),t._v(" "),a("ul",[a("li",[a("p",[a("font",{attrs:{color:"#DD1144"}},[t._v("在无key或者key为index的时候，因为Diff算法是同层比对，一样的会复用，所以导致的结果就是在真实操作DOM的时候，它认为旧23变成了新234，所以就会先把旧的23的DOM删掉，然后生成新的234,再添加到DOM中。包含了删除2个节点的真实DOM操作，生成3个节点的真实DOM操作，将3个节点加入文档的真实DOM操作")])],1)]),t._v(" "),a("li",[a("p",[a("font",{attrs:{color:"#DD1144"}},[t._v("但是在有key的情况下，因为有key做标志，新的虚拟DOM中c和d通过key知道自己和旧的虚拟DOM中的c和d描述的是真实DOM中同一段位置的东西，比对之后发现并无变化，所以在真实的DOM操作中只需要生成新的e节点并加入DOM中。只包含了生成1个节点的真实DOM操作和将1个节点加入文档的真实DOM操作")])],1)])]),t._v(" "),a("p",[t._v("所以对比一下，你就能看出，在循环中，每个节点有固定且唯一的"),a("code",[t._v("key")]),t._v("能省略点多少真实的"),a("code",[t._v("DOM")]),t._v("操作，所以这就是设置正确的"),a("code",[t._v("key")]),t._v("是真的能提高性能的原因，而且数组中循环的元素越多，性能提升的越明显。")])])},[],!1,null,null,null);s.default=_.exports}}]);