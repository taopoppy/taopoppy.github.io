(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{254:function(_,t,v){"use strict";v.r(t);var o=v(0),r=Object(o.a)({},function(){var _=this,t=_.$createElement,v=_._self._c||t;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h1",{attrs:{id:"数据库物理设计"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据库物理设计","aria-hidden":"true"}},[_._v("#")]),_._v(" 数据库物理设计")]),_._v(" "),v("h2",{attrs:{id:"innodb"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#innodb","aria-hidden":"true"}},[_._v("#")]),_._v(" Innodb")]),_._v(" "),v("h3",{attrs:{id:"_1-存储引擎的选择"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-存储引擎的选择","aria-hidden":"true"}},[_._v("#")]),_._v(" 1. 存储引擎的选择")]),_._v(" "),v("p",[_._v("一般来说，表的物理设计包括表中每一列使用的数据类型，以及如何对表和库进行命名，"),v("font",{attrs:{color:"#1E90FF"}},[_._v("但是对于mysql来说呢，还要选择表所存储的存储引擎，mysql支持多种存储引擎，存储引擎又决定了表中实际数据存储的数据结构")]),_._v("。")],1),_._v(" "),v("p",[_._v("为了能选择适合的存储引擎，我们首先要知道有哪些存储引擎可供我们选择：")]),_._v(" "),v("p",[v("font",{attrs:{color:"#DD1144"}},[v("strong",[_._v("① MYISAM")])])],1),_._v(" "),v("p",[_._v("事务为N，是"),v("code",[_._v("mysql")]),_._v("5.6之前的默认引擎，最常用的非事务性存储引擎，并不支持事务，同时在整个引擎中，"),v("font",{attrs:{color:"#1E90FF"}},[_._v("数据是以堆表的方式进行存储的")]),_._v("，并无特定的顺序。")],1),_._v(" "),v("p",[v("font",{attrs:{color:"#DD1144"}},[v("strong",[_._v("② CSV")])])],1),_._v(" "),v("p",[_._v("事务为N，"),v("font",{attrs:{color:"#1E90FF"}},[_._v("使用csv文件格式来存储数据")]),_._v("，可以直接修改"),v("code",[_._v("CSV")]),_._v("文件的内容来修改表中的数据，和"),v("code",[_._v("MYISAM")]),_._v("一样，由于不支持事务，读写会枷锁，"),v("font",{attrs:{color:"#1E90FF"}},[_._v("所以我们通常使用csv来进行不同系统的数据交换")]),_._v("，但并不建议作为核心存储引擎来使用")],1),_._v(" "),v("p",[v("font",{attrs:{color:"#DD1144"}},[v("strong",[_._v("③ Archive")])])],1),_._v(" "),v("p",[_._v("事务为N，适用场景极其特殊，"),v("font",{attrs:{color:"#1E90FF"}},[_._v("只允许查询和新增数据而不允许修改已有数据的非事务性存储引擎")]),_._v("，所以我们通常使用它来归档数据来记录日志的用途。")],1),_._v(" "),v("p",[v("font",{attrs:{color:"#DD1144"}},[v("strong",[_._v("④ Memory")])])],1),_._v(" "),v("p",[_._v("事务为N，"),v("font",{attrs:{color:"#1E90FF"}},[_._v("是一种易失型非事务性存储引擎")]),_._v("，由于数据存储在内存当中，读写速度很快，适合I/O操作。但是一旦"),v("code",[_._v("mysql")]),_._v("实例重启，存储在"),v("code",[_._v("Memory")]),_._v("存储引擎中的数据就会消失，所以也不适合作为业务的核心存储引擎来使用。"),v("font",{attrs:{color:"#1E90FF"}},[_._v("这个存储引擎一般在mysql内部使用，执行比较长的sql会产生大量中间数据集，使用这种存储引擎来存储这种临时数据会提高sql语句的执行速度")])],1),_._v(" "),v("p",[v("font",{attrs:{color:"#DD1144"}},[v("strong",[_._v("⑤ INNODB")])])],1),_._v(" "),v("p",[_._v("事务Y，"),v("font",{attrs:{color:"#1E90FF"}},[_._v("是mysql5.6之后默认的最常用的事务性存储引擎")])],1),_._v(" "),v("h3",{attrs:{id:"_2-innodb概述"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-innodb概述","aria-hidden":"true"}},[_._v("#")]),_._v(" 2. INNODB概述")]),_._v(" "),v("p",[v("code",[_._v("Innodb")]),_._v("的特点：")]),_._v(" "),v("ul",[v("li",[v("font",{attrs:{color:"#3eaf7c"}},[_._v("支持事务（ACID）")]),_._v("，其完全支持事务的原子性，一致性，隔离性和持久性，在需要事务支持的场景中，"),v("font",{attrs:{color:"#1E90FF"}},[_._v("一定不要混合使用事务性存储引擎和非事务存储引擎")])],1),_._v(" "),v("li",[v("font",{attrs:{color:"#3eaf7c"}},[_._v("数据按主键聚集存储")]),_._v("：数据在逻辑上按照表中主键的顺序来存储的，一般建议有一个自增的id来作为主键使用的。"),v("font",{attrs:{color:"#DD1144"}},[_._v("按照之前的我们的业务设计，就需要给每个表添加一个自增id列来作为表的数据库主键，而之前的业务主键可以添加一个唯一索引，保证数据的唯一性")])],1),_._v(" "),v("li",[v("font",{attrs:{color:"#3eaf7c"}},[_._v("支持行级锁及MVCC")]),_._v(":在读写的时候只会在读写的数据行上来枷锁，并不会想"),v("code",[_._v("MYISAM")]),_._v("在整个表上来枷锁。支持"),v("code",[_._v("mvcc")]),_._v("(多版本的并发控制)，可以进一步处理读写操作的互相阻塞，非常适合在这种读写混合的高并发场景中使用。")],1),_._v(" "),v("li",[v("font",{attrs:{color:"#3eaf7c"}},[_._v("支持Btree和自适应Hash索引")])],1),_._v(" "),v("li",[v("font",{attrs:{color:"#3eaf7c"}},[_._v("支持全文和空间索引")])],1)]),_._v(" "),v("h3",{attrs:{id:"_3-优化表结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-优化表结构","aria-hidden":"true"}},[_._v("#")]),_._v(" 3. 优化表结构")]),_._v(" "),v("p",[_._v("根据上述的"),v("code",[_._v("INNODB")]),_._v("的这些特点，我们给每个表添加一个自增id来作为数据库表的主键使用。通常这个数据库主键要比这个业务主键小很多，所以表和表之间的关联也可以依靠数据库主键来运行，这样比业务主键关联查询会更有效率。通过上述操作后我们再来看看表的结构的变化：")]),_._v(" "),v("ul",[v("li",[v("font",{attrs:{color:"#3eaf7c"}},[_._v("课程表")]),_._v("："),v("font",{attrs:{color:"#DD1144"}},[_._v("课程ID")]),_._v("("),v("font",{attrs:{color:"#1E90FF"}},[_._v("自增ID:1,2,3,4...")]),_._v(")，主标题，副标题，方向ID，分类ID，难度ID，上线时间，学习人数，时长，简介，需知，收获，讲师ID，课程图片，综合评分，内容实用，简洁易懂，逻辑清晰")],1),_._v(" "),v("li",[v("font",{attrs:{color:"#3eaf7c"}},[_._v("课程章节表")]),_._v("："),v("font",{attrs:{color:"#DD1144"}},[_._v("章节ID")]),_._v(",课程ID("),v("font",{attrs:{color:"#1E90FF"}},[_._v("存储空间小，和课程表关联方便")]),_._v(")，章节名称，章节说明，章节编号")],1),_._v(" "),v("li",[v("font",{attrs:{color:"#3eaf7c"}},[_._v("课程小节表")]),_._v("："),v("font",{attrs:{color:"#DD1144"}},[_._v("小节ID")]),_._v("，课程ID，章节ID，小节名称，小节视频url，视频格式，小节时长，小节编号")],1),_._v(" "),v("li",[v("font",{attrs:{color:"#3eaf7c"}},[_._v("课程方向表")]),_._v("："),v("font",{attrs:{color:"#DD1144"}},[_._v("课程方向ID")]),_._v("，课程方向名称，添加时间")],1),_._v(" "),v("li",[v("font",{attrs:{color:"#3eaf7c"}},[_._v("课程分类表")]),_._v("："),v("font",{attrs:{color:"#DD1144"}},[_._v("课程分类ID")]),_._v("，分类名称，添加时间")],1),_._v(" "),v("li",[v("font",{attrs:{color:"#3eaf7c"}},[_._v("课程难度表")]),_._v("："),v("font",{attrs:{color:"#DD1144"}},[_._v("课程难度ID")]),_._v("，课程难度,添加时间")],1),_._v(" "),v("li",[v("font",{attrs:{color:"#3eaf7c"}},[_._v("用户表")]),_._v("："),v("font",{attrs:{color:"#DD1144"}},[_._v("用户ID")]),_._v("，用户昵称("),v("font",{attrs:{color:"#1E90FF"}},[_._v("添加唯一索引")]),_._v(")，密码，性别，省，市，职位，说明，经验，积分，关注人数，粉丝人数，讲师标识")],1),_._v(" "),v("li",[v("font",{attrs:{color:"#3eaf7c"}},[_._v("问答评论表")]),_._v("："),v("font",{attrs:{color:"#DD1144"}},[_._v("评论ID")]),_._v("，父评论ID，课程ID，章节ID，小节ID，评论标题，用户ID，内容，类型，浏览量，发布时间")],1),_._v(" "),v("li",[v("font",{attrs:{color:"#3eaf7c"}},[_._v("笔记表")]),_._v("："),v("font",{attrs:{color:"#DD1144"}},[_._v("笔记ID")]),_._v("，课程ID，章节ID，小节ID，用户昵称，笔记内容，发布时间")],1),_._v(" "),v("li",[v("font",{attrs:{color:"#3eaf7c"}},[_._v("评价表")]),_._v("："),v("font",{attrs:{color:"#DD1144"}},[_._v("评价ID")]),_._v("，用户ID，课程ID，内容ID，综合评分，内容实用，简洁易懂，逻辑清晰，发布时间")],1),_._v(" "),v("li",[v("font",{attrs:{color:"#3eaf7c"}},[_._v("用户选课表")]),_._v("："),v("font",{attrs:{color:"#DD1144"}},[_._v("用户选课ID")]),_._v("，用户ID,课程ID，选课时间，累积听课时长")],1)]),_._v(" "),v("h2",{attrs:{id:"数据类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据类型","aria-hidden":"true"}},[_._v("#")]),_._v(" 数据类型")]),_._v(" "),v("h3",{attrs:{id:"_1-整数类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-整数类型","aria-hidden":"true"}},[_._v("#")]),_._v(" 1. 整数类型")]),_._v(" "),v("p",[v("code",[_._v("mysql")]),_._v("有5种整数类型，如图所示：")]),_._v(" "),v("img",{attrs:{src:_.$withBase("/mysql_two_zhengshuleixing.png"),alt:"整数类型"}}),_._v(" "),v("ul",[v("li",[_._v("我们知道一个字节是8位，也就是2的8次方，即256，但是还包含0，所以是0~255。其他的以此类推。")]),_._v(" "),v("li",[_._v("所以你保存的整数如果在0~255的范围，就应该选择"),v("code",[_._v("tinyint")]),_._v("类型，很多人喜欢选择"),v("code",[_._v("int(2)")]),_._v("，这种实际限制了整数的部分，但是存储空间依旧是4个字节，数值范围也不会变，所以这种写法不对。")])]),_._v(" "),v("h3",{attrs:{id:"_2-实数类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-实数类型","aria-hidden":"true"}},[_._v("#")]),_._v(" 2. 实数类型")]),_._v(" "),v("p",[v("code",[_._v("mysql")]),_._v("中还有可以保存浮点数的类型，我们称为实数类型，有下面三种实数类型：")]),_._v(" "),v("img",{attrs:{src:_.$withBase("/mysql_two_shishuleixing.png"),alt:"实数类型"}}),_._v(" "),v("ul",[v("li",[v("code",[_._v("float")]),_._v("和"),v("code",[_._v("double")]),_._v("存储的数值是非精确的，小数部分并不精准，计算后与正确的值会有偏差。")]),_._v(" "),v("li",[v("code",[_._v("decimal")]),_._v("类型的表示方法是这样："),v("code",[_._v("decimal(10,3)")]),_._v(",表示一共10位，小数部分占3位。计算后与正确的值没有偏差。")]),_._v(" "),v("li",[v("font",{attrs:{color:"#1E90FF"}},[_._v("decimal类型存储小数部分是精确的，但是占用空间会更大，它的存储空间是每4个字节存9个数字，小数点占一个字节")]),_._v("，所以比如"),v("code",[_._v("123456789.987654321 = decimal(18,9)")]),_._v(",因为一共18位数字，小数点前面的9位占4个字节，小数部分的9位又占4个字节，小数点单独占一个字节。在"),v("code",[_._v("mysql")]),_._v("5.6之后最多存储65位的数字。")],1)]),_._v(" "),v("h3",{attrs:{id:"_3-时间类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_3-时间类型","aria-hidden":"true"}},[_._v("#")]),_._v(" 3. 时间类型")]),_._v(" "),v("p",[v("code",[_._v("mysql")]),_._v("中时间类型也是我们常用的时间类型，如下：")]),_._v(" "),v("img",{attrs:{src:_.$withBase("/mysql_two_shijianleixing.png"),alt:"时间类型"}}),_._v(" "),v("ul",[v("li",[v("code",[_._v("TIME")]),_._v("存储空间是"),v("code",[_._v("3-6")]),_._v("个字节，因为后面还可以跟最多6位微妙值，比如"),v("code",[_._v("16.18.28.72")]),_._v("这个时间包含两位的微妙值，属于"),v("code",[_._v("time(2)")]),_._v("，它就占4个字节。"),v("code",[_._v("16.18.28.7182")]),_._v("属于"),v("code",[_._v("time(4)")]),_._v("就占5个字节。"),v("code",[_._v("16.18.28.718216")]),_._v("属于"),v("code",[_._v("time(6)")]),_._v("就占6个字节。")]),_._v(" "),v("li",[_._v("同理"),v("code",[_._v("DATETIME")]),_._v("后面也可以跟最多6位微妙值。所以存储空间是"),v("code",[_._v("5~8")]),_._v("个字节。")]),_._v(" "),v("li",[v("code",[_._v("TIMESTAMP")]),_._v("是时间戳类型，包含时区信息，同一个时间在不同时区下数值会不一样。后面也可以跟最多6位微妙值。所以存储空间是"),v("code",[_._v("4~7")]),_._v("个字节。")])]),_._v(" "),v("h3",{attrs:{id:"_4-字符串类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_4-字符串类型","aria-hidden":"true"}},[_._v("#")]),_._v(" 4. 字符串类型")]),_._v(" "),v("p",[v("code",[_._v("mysql")]),_._v("中字符串应该是最常用的数据类型了，")]),_._v(" "),v("img",{attrs:{src:_.$withBase("/mysql_two_zifuchuanleixing.png"),alt:"字符串类型"}}),_._v(" "),v("ul",[v("li",[v("code",[_._v("Char(M)")]),_._v("类型实际上表示"),v("code",[_._v("M=1~255")]),_._v("个字符("),v("font",{attrs:{color:"#DD1144"}},[_._v("注意这里是字符")]),_._v(")，之所以说它是定长，因为无论你存储的是不是"),v("code",[_._v("M")]),_._v("个字符，都会占用"),v("code",[_._v("M")]),_._v("个字符需要的存储空间。"),v("font",{attrs:{color:"#1E90FF"}},[_._v("除了"),v("code",[_._v("Char(M)")]),_._v(",其他都是可变长度的字符串类型")]),_._v("。")],1),_._v(" "),v("li",[v("code",[_._v("VarChar(M)")]),_._v("与"),v("code",[_._v("Char(M)")]),_._v("不同的是它实际占用的存储空间和实际的长度有关，"),v("font",{attrs:{color:"#1E90FF"}},[_._v("而且一行中所有varchar类型的列所占用的字节数不能超过65535个字节")]),_._v("。")],1),_._v(" "),v("li",[_._v("剩下的基本都是以字节为单位的存储：\n"),v("ul",[v("li",[v("code",[_._v("TinyText")]),_._v("存储最大不超过255字节的字符串")]),_._v(" "),v("li",[v("code",[_._v("Text")]),_._v("存储最大不超过"),v("code",[_._v("64k")]),_._v("(64*1024=65536字节)的字符串")]),_._v(" "),v("li",[v("code",[_._v("MediumText")]),_._v("存储最大不超过"),v("code",[_._v("16M")]),_._v("(16"),v("em",[_._v("1024")]),_._v("1024=16777216字节)的字符串")]),_._v(" "),v("li",[v("code",[_._v("LongText")]),_._v("存储最大不超过"),v("code",[_._v("4G")]),_._v("(4"),v("em",[_._v("1024")]),_._v("1024*1024=4294967296字节)的字符串")])])])]),_._v(" "),v("h2",{attrs:{id:"选择类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#选择类型","aria-hidden":"true"}},[_._v("#")]),_._v(" 选择类型")]),_._v(" "),v("h3",{attrs:{id:"_1-选择原则"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-选择原则","aria-hidden":"true"}},[_._v("#")]),_._v(" 1. 选择原则")]),_._v(" "),v("p",[_._v("知道了数据类型之后，我们就应该考虑如何为数据选择合适的数据类型，我们选择数据类型有很多的原则：")]),_._v(" "),v("p",[v("font",{attrs:{color:"#DD1144"}},[v("strong",[_._v("① 优先选择符合存储数据的最小数据类型")])])],1),_._v(" "),v("ul",[v("li",[_._v("比如说"),v("code",[_._v("3147483647")]),_._v("按照有符号的我们一般都放在"),v("code",[_._v("Bigint")]),_._v("（8字节）类型中，但是如果能按照无符号的"),v("code",[_._v("int")]),_._v("（4字节）类型存储，我们就能节省4字节的存储空间")]),_._v(" "),v("li",[_._v("再比如字符串，在"),v("code",[_._v("mysql")]),_._v("中存在可以将字符串转化成为数字来存储，比如"),v("code",[_._v("'255.255.255.255'")]),_._v("这个字符串需要15个字节的空间存储，但是利用下面这样的方式存储为无符号的int类型，只需要4个字节\n"),v("ul",[v("li",[v("font",{attrs:{color:"#1E90FF"}},[_._v("INET_ATON('255.255.255.255') = 4294967295")])],1),_._v(" "),v("li",[v("font",{attrs:{color:"#1E90FF"}},[_._v("INET_NTOA(4294967295) = '255.255.255.255'")])],1)])])]),_._v(" "),v("p",[v("font",{attrs:{color:"#DD1144"}},[v("strong",[_._v("② 谨慎使用ENUM,TEXT字符串类型")])])],1),_._v(" "),v("ul",[v("li",[_._v("因为实际"),v("code",[_._v("Text")]),_._v("类型的字符串基本上能存"),v("code",[_._v("64k")]),_._v("的字符串，相当于能写两万多个汉字，那实际上像备注说明这些字段存储到数据库顶多用个"),v("code",[_._v("VarChar")]),_._v("类型就够够的了。"),v("font",{attrs:{color:"#1E90FF"}},[_._v("另外mysql的内存临时表是不支持Text类型的，所以如果Text类型的数据在排序的时候就不能使用内容临时表，而要使用磁盘临时表，速度一下就慢了很多很多")]),_._v("。")],1),_._v(" "),v("li",[_._v("所以如果一定要使用这个类型就建议分离都一个单独的扩展表中来存储，查询时不要使用"),v("code",[_._v("select *")]),_._v("，只取出必要的列，不需要的时候就不要查询。")]),_._v(" "),v("li",[v("code",[_._v("mysql")]),_._v("对索引的长度是有限制的，在"),v("code",[_._v("Text")]),_._v("类型上面不能进行全部的索引，而只能进行前置索引，另外"),v("code",[_._v("Text")]),_._v("列上是不能有默认值的")]),_._v(" "),v("li",[v("code",[_._v("ENUM")]),_._v("类型实际上是在存储字符串的时候将每个枚举值转换成为数字存储的，表面上这是我们上面优化的一种手段，但是如果要修改其中的值，必须使用"),v("code",[_._v("alter")]),_._v("语句，这在频繁修改数据库结构的核心业务场景中是不推荐的。")])]),_._v(" "),v("p",[v("font",{attrs:{color:"#DD1144"}},[v("strong",[_._v("③ 同财务相关的数值型数据，必需使用decimal类型")])])],1),_._v(" "),v("ul",[v("li",[_._v("数据库中的三个浮点数中只有"),v("code",[_._v("decimal")]),_._v("类型是计算不丢失精度的，所以财务相关的数值型数据必须要采用"),v("code",[_._v("decimal")]),_._v("类型的数据来存储。")])]),_._v(" "),v("h3",{attrs:{id:"_2-选择实战"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-选择实战","aria-hidden":"true"}},[_._v("#")]),_._v(" 2. 选择实战")]),_._v(" "),v("p",[_._v("在已知了所有的数据类型和数据类型选择的原则后，我们来为之前创建的那些表里面的所有的属性来选择对应的数据类型：")]),_._v(" "),v("p",[v("font",{attrs:{color:"#1E90FF"}},[v("strong",[_._v("① 课程表")])])],1),_._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"center"}},[_._v("编号")]),_._v(" "),v("th",{staticStyle:{"text-align":"center"}},[_._v("分类")]),_._v(" "),v("th",{staticStyle:{"text-align":"center"}},[_._v("举例")])])]),_._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"center"}},[_._v("1")]),_._v(" "),v("td",{staticStyle:{"text-align":"center"}},[_._v("压缩")]),_._v(" "),v("td",{staticStyle:{"text-align":"center"}},[_._v("UglifyJS JSmin CSSO")])])])]),_._v(" "),v("h2",{attrs:{id:"对象命名"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#对象命名","aria-hidden":"true"}},[_._v("#")]),_._v(" 对象命名")])])},[],!1,null,null,null);t.default=r.exports}}]);