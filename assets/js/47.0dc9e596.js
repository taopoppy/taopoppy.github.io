(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{232:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"js中的类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js中的类型转换","aria-hidden":"true"}},[t._v("#")]),t._v(" JS中的类型转换")]),t._v(" "),a("p",[t._v("关于JS类型转换有非常多的规则，如果你自己还没有对类型转换做研究你可以先看看本专题最下面的参考资料，你会发现内容很多，你会很苦恼，这么多东西怎么记忆。但是我们要明确，不是任何知识我们都要去记忆，比如数组"),a("code",[t._v("[1,2,3]")]),t._v("和数字"),a("code",[t._v("1")]),t._v("相加,会发生隐式的类型转化，但是这种规则我个人觉得没有必要去记，因为在写代码的过程中基本见不到，这种就仅仅是为了让数组和数字相加创建的规则，实际上没有啥用。包括在后面我们还会遇到类似的很多东西，所以我们始终要记住: 在精髓和糟粕共存的"),a("code",[t._v("js")]),t._v("当中，什么是应该去记忆的东西。")]),t._v(" "),a("h2",{attrs:{id:"规则综述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#规则综述","aria-hidden":"true"}},[t._v("#")]),t._v(" 规则综述")]),t._v(" "),a("p",[t._v("因为JS是弱类型语言，所以类型转换发生非常频繁，不管是强制类型转换还是隐式类型转换，都遵守相同的规则，好在大部分转换规则都很简单，如下图")]),t._v(" "),a("img",{attrs:{src:t.$withBase("/conversion.jpg"),alt:"conversion"}}),t._v(" "),a("p",[t._v("较为复杂的部分是Number和String之间的转换，以及对象跟基本类型之间的转换。我们分别来看一看这几种转换的规则")]),t._v(" "),a("h2",{attrs:{id:"stringtonumber"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stringtonumber","aria-hidden":"true"}},[t._v("#")]),t._v(" StringToNumber")]),t._v(" "),a("p",[a("code",[t._v("String")]),t._v("类型转化成为"),a("code",[t._v("Number")]),t._v("有三种方法，"),a("code",[t._v("Number()")]),t._v(","),a("code",[t._v("parseInt()")]),t._v(","),a("code",[t._v("parseFloat()")]),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"_1-number-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-number-函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. Number()函数")]),t._v(" "),a("ul",[a("li",[t._v("对字符串的处理遵循数字常量的相关规定/语法："),a("font",{attrs:{color:"#3eaf7c"}},[t._v("只要这个字符串是正确的十进制、二进制、八进制和十六进制表达方式，以及正确的正负号科学计数法，都能被正确的转化成数字")]),t._v("。如果处理失败时返回"),a("code",[t._v("NaN")]),t._v("。"),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'30'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 十进制30")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0b111'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 二级制7")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0o13'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 八进制11")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0xFF'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 十六进制255")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1e3'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 科学计数法")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-1e-2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 科学计数法")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1s1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n")])])])],1)]),t._v(" "),a("h3",{attrs:{id:"_2-parseint-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-parseint-函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. parseInt()函数")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("parseInt()")]),t._v("将输入值转化为整数,在没有第二个参数时默认以十进制转换数值，有第二个参数时，以第二个参数为基数转换数值，如果基数有误返回"),a("code",[t._v("NaN")]),t._v("："),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"13"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//13")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"11"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"17"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//15")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1f"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//31")]),t._v("\n")])])])])]),t._v(" "),a("h3",{attrs:{id:"_3-parsefloat-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-parsefloat-函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. parseFloat()函数")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("parseFloat()")]),t._v("将输入的是小数字符串(或具有可转换小数的字符串)转换为小数，如果输入是个整数字符串依然返回整数"),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.21'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//NaN")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.21'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//0.21")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("parseFloat")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.0d'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//0")]),t._v("\n")])])])])]),t._v(" "),a("p",[a("strong",[t._v("总结")])]),t._v(" "),a("p",[t._v("特别要注意，关于"),a("code",[t._v("Number()")]),t._v(","),a("code",[t._v("parseInt()")]),t._v(","),a("code",[t._v("parseFloat()")]),t._v("这三个方法还有很多坑，但这些坑很难遇到，一旦遇到，可以在"),a("a",{attrs:{href:"https://blog.csdn.net/Faremax/article/details/76714294",target:"_blank",rel:"noopener noreferrer"}},[t._v("这里"),a("OutboundLink")],1),t._v("去仔细查阅")]),t._v(" "),a("h2",{attrs:{id:"numbertostring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#numbertostring","aria-hidden":"true"}},[t._v("#")]),t._v(" NumberToString")]),t._v(" "),a("p",[a("code",[t._v("Number")]),t._v("类型转化成为"),a("code",[t._v("String")]),t._v("实际上比任何转化都要简单，分为两种情况: 绝对值较大和绝对值较小,绝对值较小的"),a("code",[t._v("Number")]),t._v("类型转化成为"),a("code",[t._v("String")]),t._v("类型就是直觉的十进制表示，两边加个单引号或者双引号即可,绝对值较大的"),a("code",[t._v("Number")]),t._v("类型转化成为"),a("code",[t._v("String")]),t._v("类型是以科学计数法表示的")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '11'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.07")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//'1.07e+21'")]),t._v("\n")])])]),a("p",[a("code",[t._v("Number")]),t._v("类型转化成为"),a("code",[t._v("String")]),t._v("同样也有两种方法"),a("code",[t._v(".toString()")]),t._v("和"),a("code",[t._v("String()")])]),t._v(" "),a("h3",{attrs:{id:"_1-tostring-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-tostring-函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. .toString()函数")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("toString()")]),t._v("方法其实适用任何类型向"),a("code",[t._v("String")]),t._v("类型转化,该方法不会影响到原变量，它会将转换的结果返回。采用"),a("code",[t._v("Number")]),t._v("类型的"),a("code",[t._v(".toString()")]),t._v("方法的基模式，可以用不同的基输出数字，例如二进制的基是"),a("code",[t._v("2")]),t._v("，八进制的基是"),a("code",[t._v("8，十六进制的基是")]),t._v("16`"),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" iNum "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iNum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//输出 "1010"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iNum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//输出 "12"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alert")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iNum"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("16")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//输出 "A"')]),t._v("\n")])])])])]),t._v(" "),a("h3",{attrs:{id:"_2-string-函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-string-函数","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. String()函数")]),t._v(" "),a("ul",[a("li",[t._v("使用"),a("code",[t._v("String()")]),t._v("函数做强制类型转换时，对于"),a("code",[t._v("Number")]),t._v("和"),a("code",[t._v("Boolean")]),t._v("实际上就是调用的"),a("code",[t._v(".toString()")]),t._v("方法,但是对于"),a("code",[t._v("null")]),t._v("和"),a("code",[t._v("undefined")]),t._v("，就不会调用"),a("code",[t._v(".toString()")]),t._v("方法,应为调用他们的方法，会报错,它会将"),a("code",[t._v("null")]),t._v("直接转换为"),a("code",[t._v('"null"')]),t._v(",将"),a("code",[t._v("undefined")]),t._v("直接转换为"),a("code",[t._v('"undefined"')]),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//"123"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//"报错"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//"报错"')]),t._v("\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"装箱转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#装箱转换","aria-hidden":"true"}},[t._v("#")]),t._v(" 装箱转换")]),t._v(" "),a("p",[t._v("每一种基本类型"),a("code",[t._v("Numeber")]),t._v(","),a("code",[t._v("String")]),t._v(","),a("code",[t._v("Boolean")]),t._v(","),a("code",[t._v("Symbol")]),t._v("在对象中都有对应的类，所谓装箱转换，正是把基本类型转换为对应的对象，就是我们常说的基本包装类型。另外，"),a("code",[t._v("Undefined和")]),t._v("和"),a("code",[t._v("Null")]),t._v("类型是报错的。")]),t._v(" "),a("h3",{attrs:{id:"_1-装箱的本质"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-装箱的本质","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. 装箱的本质")]),t._v(" "),a("ul",[a("li",[t._v("当我们使用基本类型的方法或者属性的时候，我们经常不会去思考，其实对于基本类型的数值是没有方法和属性的，那么为什么又能使用呢？答案是这样："),a("font",{attrs:{color:"#3eaf7c"}},[t._v("使用基本类型的方法或者属性的时候，本质是发生了装箱转换，使用对应的构造函数临时将基本类型转换成为了基本包装类型，使用完毕即销毁")]),t._v("。比如下面这段代码:"),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1  ")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined ")]),t._v("\n")])])]),t._v("背后发生的装箱转换过程如下："),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" temp1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ntemp1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ntemp1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1  ")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" temp2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("temp2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined  ")]),t._v("\ntemp2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])],1)]),t._v(" "),a("h3",{attrs:{id:"_2-symbol类型的装箱"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-symbol类型的装箱","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. Symbol类型的装箱")]),t._v(" "),a("ul",[a("li",[t._v("全局的"),a("code",[t._v("Symbol")]),t._v("函数无法使用"),a("code",[t._v("new")]),t._v("来调用，但是我们仍然可以利用装箱机制来得到一个"),a("code",[t._v("Symbol")]),t._v("对象:"),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" symbolObject "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" symbolObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// object")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("symbolObject "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true ")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("symbolObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" Symbol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("symbolObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [object Symbol]")]),t._v("\n")])])])]),t._v(" "),a("li",[t._v("使用内置的"),a("code",[t._v("Object")]),t._v("函数，我们可以在"),a("code",[t._v("javascript")]),t._v("代码中显示调用装箱能力"),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" symbolObject "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" symbolObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("                            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// object")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("symbolObject "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Symbol")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true ")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("symbolObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("constructor "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" Symbol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("             "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("symbolObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// [object Symbol]")]),t._v("\n")])])])]),t._v(" "),a("li",[t._v("特别要注意就是"),a("code",[t._v("call")]),t._v("本身会产生装箱操作，所以要配合"),a("code",[t._v("typeof")]),t._v("来区分基本类型还是对象类型")]),t._v(" "),a("li",[t._v("装箱机制会频繁的产生临时对象，在对一些性能要求较高的场景下，我们应该避免对基本类型的装箱装换")])]),t._v(" "),a("h2",{attrs:{id:"拆箱转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#拆箱转换","aria-hidden":"true"}},[t._v("#")]),t._v(" 拆箱转换")]),t._v(" "),a("h3",{attrs:{id:"_1-toprimitive"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-toprimitive","aria-hidden":"true"}},[t._v("#")]),t._v(" 1. ToPrimitive")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("对象类型到"),a("code",[t._v("String")]),t._v("和"),a("code",[t._v("Number")]),t._v("的装换都遵循"),a("font",{attrs:{color:"#3eaf7c"}},[t._v("先拆箱在转换")]),t._v("的规则，通过拆箱将对象变成基本类型，在从基本类型转换成对应的"),a("code",[t._v("String")]),t._v("或者"),a("code",[t._v("Number")])],1)]),t._v(" "),a("li",[a("p",[t._v("在浏览器内部是调用了"),a("code",[t._v("ToObject")]),t._v("操作来实现装箱操作，相应的也规定了"),a("code",[t._v("ToPrimitive")]),t._v("来实现拆箱转换，即对象类型到基本类型的转换。"),a("code",[t._v("ToPrimitive")]),t._v("是一种抽象操作，是"),a("code",[t._v("javascript")]),t._v("内部才会用的操作，我们不会显示的调用。当需要将对象转换为相应的基本类型值时，"),a("code",[t._v("ToPrimitive")]),t._v("就会调用对象的内部方法"),a("code",[t._v("[[DefaultValue]]")]),t._v("来完成。")])]),t._v(" "),a("li",[a("p",[a("code",[t._v("ToPrimitive")]),t._v("操作接收两个参数，一个是"),a("code",[t._v("input")]),t._v("需要转换的值，第二个是可选参数"),a("code",[t._v("hint")]),t._v("代表期望的转换类型。并且在调用"),a("code",[t._v("[[DefaultValue]]")]),t._v("的时候"),a("code",[t._v("hint")]),t._v("会传递过去")])]),t._v(" "),a("li",[a("p",[t._v("拆箱转换会尝试调用"),a("code",[t._v("valueOf")]),t._v("和"),a("code",[t._v("toString")]),t._v("来获得拆箱后的基本类型。如果"),a("code",[t._v("valueOf")]),t._v("和 "),a("code",[t._v("toString")]),t._v("都不存在，或者没有返回基本类型，则会产生类型错误"),a("code",[t._v("TypeError")]),t._v("。但是请注意："),a("code",[t._v("valueOf()")]),t._v("和"),a("code",[t._v("toString()")]),t._v("的调用逻辑顺序并不是固定的取决于"),a("code",[t._v("hint")]),t._v("参数")])])]),t._v(" "),a("h3",{attrs:{id:"_2-objecttostring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-objecttostring","aria-hidden":"true"}},[t._v("#")]),t._v(" 2. ObjectToString")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("hint")]),t._v("是"),a("code",[t._v("String")]),t._v("时，"),a("code",[t._v("toString()")]),t._v("的调用顺序在"),a("code",[t._v("valueOf()")]),t._v("之前，并且这两个方法如果都没有返回一个基本类型值，则抛出异常；如果返回了基本类型值"),a("code",[t._v("primValue")]),t._v("（拆箱过程），则返回"),a("code",[t._v("String(primValue)")]),t._v("（转换过程）,")])]),t._v(" "),a("img",{attrs:{src:t.$withBase("/ObjectToString.png"),alt:"ObjectToString"}}),t._v(" "),a("ul",[a("li",[a("p",[t._v("下面我们来举两个例子：\n例一：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("首先，按照我们之前学的,"),a("code",[t._v("a")]),t._v("是一个普通对象，"),a("code",[t._v("String(a)")]),t._v("是要调用"),a("code",[t._v("a")]),t._v("对象的"),a("code",[t._v("toString()")]),t._v("方法，这个方法是继承了"),a("code",[t._v("Object.prototype")]),t._v("原型上的"),a("code",[t._v("toString()")]),t._v(",这方法是返回"),a("code",[t._v("[[Class]]")]),t._v("属性的，所以对于普通对象，结果就是"),a("code",[t._v("[object Object]")])]),t._v(" "),a("p",[t._v("更深入的理解是这样："),a("code",[t._v("a")]),t._v("对象转换为"),a("code",[t._v("String")]),t._v("基本类型，"),a("code",[t._v("javascript")]),t._v("执行抽象操作"),a("code",[t._v("ToPrimitive")]),t._v("，调用对象的内部方法"),a("code",[t._v("[[DefaultValue]]")]),t._v(",一个参数"),a("code",[t._v("input")]),t._v("就是"),a("code",[t._v("a")]),t._v("对象，第二个参数"),a("code",[t._v("hint")]),t._v("就是"),a("code",[t._v("String")]),t._v("，所以优先调用了"),a("code",[t._v("a")]),t._v("继承了"),a("code",[t._v("Object.prototype")]),t._v("原型上的"),a("code",[t._v("toString()")]),t._v("方法，返回的"),a("code",[t._v("[object Object]")]),t._v("为基本类型，就返回了，此时拆箱完成。最后一步，再将基本类型"),a("code",[t._v("[object Object]")]),t._v("转换，返回"),a("code",[t._v("String('[object Object]')")])]),t._v(" "),a("p",[t._v("到这里你也会有疑问，拆箱完毕后不就返回了基本类型么，为什么还有做最后一步转换，我只能先告诉你，"),a("code",[t._v("toString")]),t._v("和"),a("code",[t._v("valueOf")]),t._v("方法是可以被重写的，别重写的方法就不一定返回基本类型，还有可能返回对象，甚至啥都不返回。")]),t._v(" "),a("p",[t._v("例二：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("toString")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("valueOf")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("toString")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 或是直接去掉这个方法，a.toString = undefined;")]),t._v("\nb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("valueOf")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "hello"')]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "true"')]),t._v("\n")])])]),a("p",[t._v("首先创造了没有原型的对象"),a("code",[t._v("a")]),t._v("和"),a("code",[t._v("b")]),t._v(",它们并没有继承任何"),a("code",[t._v("toString()")]),t._v("和"),a("code",[t._v("valueOf()")]),t._v("方法，我们就自己定义了，对于"),a("code",[t._v("a")]),t._v("来讲，因为"),a("code",[t._v("toString()")]),t._v("直接返回了基本类型，所以最终结果就是"),a("code",[t._v("String('hello')")]),t._v("。对于"),a("code",[t._v("b")]),t._v("，虽然"),a("code",[t._v("toString()")]),t._v("返回了基本类型，但是是"),a("code",[t._v("Boolean")]),t._v("类型"),a("code",[t._v("true")]),t._v("，所以最终还是要经过"),a("code",[t._v("String()")]),t._v("方法转换为字符串"),a("code",[t._v('"true"')])])])]),t._v(" "),a("h3",{attrs:{id:"_3-objecttonumber"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-objecttonumber","aria-hidden":"true"}},[t._v("#")]),t._v(" 3. ObjectToNumber")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("hint")]),t._v("是"),a("code",[t._v("Number")]),t._v("时，顺序是反过来的，优先调用"),a("code",[t._v("valueOf")]),t._v("，如果其返回值不是基本类型，再调用"),a("code",[t._v("toString")]),t._v("。另外，除了日期对象外，如果没传"),a("code",[t._v("hint")]),t._v("的话，其默认值是"),a("code",[t._v("Number")]),t._v("，因此"),a("code",[t._v("JS")]),t._v("中类型转化时，更偏爱"),a("code",[t._v("Number")])])]),t._v(" "),a("img",{attrs:{src:t.$withBase("/ObjectToNumber.png"),alt:"ObjectToNumber"}}),t._v(" "),a("ul",[a("li",[a("p",[t._v("下面我们依旧来举个例子：")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Object"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("toString")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\na"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("valueOf")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("toString")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1e3"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \nb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("valueOf")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1000")]),t._v("\n")])])]),a("p",[a("code",[t._v("a")]),t._v("对象转换为"),a("code",[t._v("Number")]),t._v("基本类型，"),a("code",[t._v("javascript")]),t._v("执行抽象操作"),a("code",[t._v("ToPrimitive")]),t._v("，调用对象的内部方法"),a("code",[t._v("[[DefaultValue]]")]),t._v(",一个参数"),a("code",[t._v("input")]),t._v("就是"),a("code",[t._v("a")]),t._v("对象，第二个参数"),a("code",[t._v("hint")]),t._v("就是"),a("code",[t._v("Number")]),t._v("，所以优先调用了"),a("code",[t._v("a")]),t._v("的"),a("code",[t._v("valueOf()")]),t._v("方法，返回的"),a("code",[t._v("true")]),t._v("为基本类型，就返回了，此时拆箱完成。最后一步，再将基本类型"),a("code",[t._v("true")]),t._v("转换，返回"),a("code",[t._v("Number(true)")]),t._v("，所以最终结果是1。对于"),a("code",[t._v("b")]),t._v("对象来说，"),a("code",[t._v("valueOf()")]),t._v("方法返回的是不是基本类型，所以就使用了"),a("code",[t._v("toString()")]),t._v("方法，返回的是"),a("code",[t._v("String")]),t._v("类型,最后"),a("code",[t._v('Nnumber("1e3")')]),t._v("，显然这是我们之前讲的"),a("code",[t._v("NumberToString")]),t._v("的转换过程。")])]),t._v(" "),a("li",[a("p",[t._v("实际上到这里类型转换的大多数情况我们都学过了，强制类型转换我们上面都展示了，而隐式类型转换大多存在于运算符合条件语句中")])])]),t._v(" "),a("h2",{attrs:{id:"运算符和语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算符和语句","aria-hidden":"true"}},[t._v("#")]),t._v(" 运算符和语句")]),t._v(" "),a("p",[t._v("关于运算符和语句当中存在的隐式类型转换，我们专门开设了一个专题,请到"),a("a",{attrs:{href:"https://www.taopoppy.cn/Front-end/javascriptKnowladge_ImplicitTypeConversion.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("隐式类型转换"),a("OutboundLink")],1),t._v("专题中查看")]),t._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("类型转换的思维导图\n"),a("mermaid",[t._v('\ngraph LR\nA["Number()"] --- F["StringToNumber"]\nB["parseInt()"] --- F\nC["parseFloat()"] --- F\nD["toString()"] --- G["NumberToString"]\nE["String()"] ---G\nF --- H["类型转换"]\nG --- H\nH --- I["装箱转换"]\nH --- J["拆箱装换"]\nI --- K["new 包装类型(基本类型值)"]\nI --- L["Object(基本类型值)"]\nI --- M["(function(){return this}).call(基本类型值)"]\nJ --- N["ToPrimitive抽象操作"]\nstyle H fill:#f9f,stroke:#333,stroke-width:4px\n')])],1)]),t._v(" "),a("li",[a("p",[t._v("拆箱转换的思维导图\n"),a("mermaid",[t._v('\ngraph LR\nsubgraph 先拆箱\nA["ToPrimitive"] --\x3e B["DefaultValue(input,hint)"]\nB --\x3e C["hint === String"]\nC --\x3e E["toString()方法"]\nE --\x3e F["valueOf()方法"]\nB --\x3e D["hint === Number"]\nD --\x3e H["valueOf()方法"]\nH --\x3e I["toString()方法"]\nend\nsubgraph 再转换\nF --\x3e G["String(拆箱结果)"]\nI --\x3e J["Number(拆箱转换)"]\nend\n')])],1)])]),t._v(" "),a("p",[a("strong",[t._v("参考资料")])]),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"https://juejin.im/post/5cec1bcff265da1b8f1aa08f#heading-22",target:"_blank",rel:"noopener noreferrer"}},[t._v("你真的掌握变量和类型了吗"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.qinshenxue.com/article/javascript-type-conversion.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Javascript类型转换"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/5b076c006fb9a07aa43c9fda",target:"_blank",rel:"noopener noreferrer"}},[t._v("你可能忽略的js类型转换"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/5b6906b46fb9a04fcb5b8771",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript核心概念(1):类型转换"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/5d1587f4e51d4510664d1715#heading-2",target:"_blank",rel:"noopener noreferrer"}},[t._v("深入理解JavaScript的类型转换"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.cnblogs.com/coco1s/p/6509141.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("一道面试题引发的对javascript类型转换的思考"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://blog.csdn.net/Faremax/article/details/76714294",target:"_blank",rel:"noopener noreferrer"}},[t._v("透彻研究Javascript类型转换"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/5cbaf130518825325050fb0a",target:"_blank",rel:"noopener noreferrer"}},[t._v("【JS迷你书】类型转换之装箱操作"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.im/post/5d01b73de51d455a2f220248",target:"_blank",rel:"noopener noreferrer"}},[t._v("掌握 Javascript 类型转换：从规则开始"),a("OutboundLink")],1)])])])},[],!1,null,null,null);s.default=e.exports}}]);